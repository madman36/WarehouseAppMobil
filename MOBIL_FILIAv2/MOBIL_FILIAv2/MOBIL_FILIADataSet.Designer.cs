//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8745
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8745.
// 
namespace MOBIL_FILIAv2 {
    using System;
    using System.Data;
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MOBIL_FILIADataSet")]
    public partial class MOBIL_FILIADataSet : global::System.Data.DataSet {
        
        private FILIA_CFGDataTable tableFILIA_CFG;
        
        private FILIEDataTable tableFILIE;
        
        private FL_WYSYLKADataTable tableFL_WYSYLKA;
        
        private FL_WYSYLKA_DETALEDataTable tableFL_WYSYLKA_DETALE;
        
        private KONTRAHENCIDataTable tableKONTRAHENCI;
        
        private LICZNIKIDataTable tableLICZNIKI;
        
        private OPAKOWANIADataTable tableOPAKOWANIA;
        
        private TOWARYDataTable tableTOWARY;
        
        private TRANSFER_DO_WYSLANIADataTable tableTRANSFER_DO_WYSLANIA;
        
        private TWR_MAGAZYNYDataTable tableTWR_MAGAZYNY;
        
        private UZYTKOWNICYDataTable tableUZYTKOWNICY;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MOBIL_FILIADataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FILIA_CFGDataTable FILIA_CFG {
            get {
                return this.tableFILIA_CFG;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FILIEDataTable FILIE {
            get {
                return this.tableFILIE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FL_WYSYLKADataTable FL_WYSYLKA {
            get {
                return this.tableFL_WYSYLKA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FL_WYSYLKA_DETALEDataTable FL_WYSYLKA_DETALE {
            get {
                return this.tableFL_WYSYLKA_DETALE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KONTRAHENCIDataTable KONTRAHENCI {
            get {
                return this.tableKONTRAHENCI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LICZNIKIDataTable LICZNIKI {
            get {
                return this.tableLICZNIKI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OPAKOWANIADataTable OPAKOWANIA {
            get {
                return this.tableOPAKOWANIA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TOWARYDataTable TOWARY {
            get {
                return this.tableTOWARY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRANSFER_DO_WYSLANIADataTable TRANSFER_DO_WYSLANIA {
            get {
                return this.tableTRANSFER_DO_WYSLANIA;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TWR_MAGAZYNYDataTable TWR_MAGAZYNY {
            get {
                return this.tableTWR_MAGAZYNY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UZYTKOWNICYDataTable UZYTKOWNICY {
            get {
                return this.tableUZYTKOWNICY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MOBIL_FILIADataSet cln = ((MOBIL_FILIADataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FILIA_CFG"] != null)) {
                    base.Tables.Add(new FILIA_CFGDataTable(ds.Tables["FILIA_CFG"]));
                }
                if ((ds.Tables["FILIE"] != null)) {
                    base.Tables.Add(new FILIEDataTable(ds.Tables["FILIE"]));
                }
                if ((ds.Tables["FL_WYSYLKA"] != null)) {
                    base.Tables.Add(new FL_WYSYLKADataTable(ds.Tables["FL_WYSYLKA"]));
                }
                if ((ds.Tables["FL_WYSYLKA_DETALE"] != null)) {
                    base.Tables.Add(new FL_WYSYLKA_DETALEDataTable(ds.Tables["FL_WYSYLKA_DETALE"]));
                }
                if ((ds.Tables["KONTRAHENCI"] != null)) {
                    base.Tables.Add(new KONTRAHENCIDataTable(ds.Tables["KONTRAHENCI"]));
                }
                if ((ds.Tables["LICZNIKI"] != null)) {
                    base.Tables.Add(new LICZNIKIDataTable(ds.Tables["LICZNIKI"]));
                }
                if ((ds.Tables["OPAKOWANIA"] != null)) {
                    base.Tables.Add(new OPAKOWANIADataTable(ds.Tables["OPAKOWANIA"]));
                }
                if ((ds.Tables["TOWARY"] != null)) {
                    base.Tables.Add(new TOWARYDataTable(ds.Tables["TOWARY"]));
                }
                if ((ds.Tables["TRANSFER_DO_WYSLANIA"] != null)) {
                    base.Tables.Add(new TRANSFER_DO_WYSLANIADataTable(ds.Tables["TRANSFER_DO_WYSLANIA"]));
                }
                if ((ds.Tables["TWR_MAGAZYNY"] != null)) {
                    base.Tables.Add(new TWR_MAGAZYNYDataTable(ds.Tables["TWR_MAGAZYNY"]));
                }
                if ((ds.Tables["UZYTKOWNICY"] != null)) {
                    base.Tables.Add(new UZYTKOWNICYDataTable(ds.Tables["UZYTKOWNICY"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFILIA_CFG = ((FILIA_CFGDataTable)(base.Tables["FILIA_CFG"]));
            if ((initTable == true)) {
                if ((this.tableFILIA_CFG != null)) {
                    this.tableFILIA_CFG.InitVars();
                }
            }
            this.tableFILIE = ((FILIEDataTable)(base.Tables["FILIE"]));
            if ((initTable == true)) {
                if ((this.tableFILIE != null)) {
                    this.tableFILIE.InitVars();
                }
            }
            this.tableFL_WYSYLKA = ((FL_WYSYLKADataTable)(base.Tables["FL_WYSYLKA"]));
            if ((initTable == true)) {
                if ((this.tableFL_WYSYLKA != null)) {
                    this.tableFL_WYSYLKA.InitVars();
                }
            }
            this.tableFL_WYSYLKA_DETALE = ((FL_WYSYLKA_DETALEDataTable)(base.Tables["FL_WYSYLKA_DETALE"]));
            if ((initTable == true)) {
                if ((this.tableFL_WYSYLKA_DETALE != null)) {
                    this.tableFL_WYSYLKA_DETALE.InitVars();
                }
            }
            this.tableKONTRAHENCI = ((KONTRAHENCIDataTable)(base.Tables["KONTRAHENCI"]));
            if ((initTable == true)) {
                if ((this.tableKONTRAHENCI != null)) {
                    this.tableKONTRAHENCI.InitVars();
                }
            }
            this.tableLICZNIKI = ((LICZNIKIDataTable)(base.Tables["LICZNIKI"]));
            if ((initTable == true)) {
                if ((this.tableLICZNIKI != null)) {
                    this.tableLICZNIKI.InitVars();
                }
            }
            this.tableOPAKOWANIA = ((OPAKOWANIADataTable)(base.Tables["OPAKOWANIA"]));
            if ((initTable == true)) {
                if ((this.tableOPAKOWANIA != null)) {
                    this.tableOPAKOWANIA.InitVars();
                }
            }
            this.tableTOWARY = ((TOWARYDataTable)(base.Tables["TOWARY"]));
            if ((initTable == true)) {
                if ((this.tableTOWARY != null)) {
                    this.tableTOWARY.InitVars();
                }
            }
            this.tableTRANSFER_DO_WYSLANIA = ((TRANSFER_DO_WYSLANIADataTable)(base.Tables["TRANSFER_DO_WYSLANIA"]));
            if ((initTable == true)) {
                if ((this.tableTRANSFER_DO_WYSLANIA != null)) {
                    this.tableTRANSFER_DO_WYSLANIA.InitVars();
                }
            }
            this.tableTWR_MAGAZYNY = ((TWR_MAGAZYNYDataTable)(base.Tables["TWR_MAGAZYNY"]));
            if ((initTable == true)) {
                if ((this.tableTWR_MAGAZYNY != null)) {
                    this.tableTWR_MAGAZYNY.InitVars();
                }
            }
            this.tableUZYTKOWNICY = ((UZYTKOWNICYDataTable)(base.Tables["UZYTKOWNICY"]));
            if ((initTable == true)) {
                if ((this.tableUZYTKOWNICY != null)) {
                    this.tableUZYTKOWNICY.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MOBIL_FILIADataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MOBIL_FILIADataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFILIA_CFG = new FILIA_CFGDataTable();
            base.Tables.Add(this.tableFILIA_CFG);
            this.tableFILIE = new FILIEDataTable();
            base.Tables.Add(this.tableFILIE);
            this.tableFL_WYSYLKA = new FL_WYSYLKADataTable();
            base.Tables.Add(this.tableFL_WYSYLKA);
            this.tableFL_WYSYLKA_DETALE = new FL_WYSYLKA_DETALEDataTable();
            base.Tables.Add(this.tableFL_WYSYLKA_DETALE);
            this.tableKONTRAHENCI = new KONTRAHENCIDataTable();
            base.Tables.Add(this.tableKONTRAHENCI);
            this.tableLICZNIKI = new LICZNIKIDataTable();
            base.Tables.Add(this.tableLICZNIKI);
            this.tableOPAKOWANIA = new OPAKOWANIADataTable();
            base.Tables.Add(this.tableOPAKOWANIA);
            this.tableTOWARY = new TOWARYDataTable();
            base.Tables.Add(this.tableTOWARY);
            this.tableTRANSFER_DO_WYSLANIA = new TRANSFER_DO_WYSLANIADataTable();
            base.Tables.Add(this.tableTRANSFER_DO_WYSLANIA);
            this.tableTWR_MAGAZYNY = new TWR_MAGAZYNYDataTable();
            base.Tables.Add(this.tableTWR_MAGAZYNY);
            this.tableUZYTKOWNICY = new UZYTKOWNICYDataTable();
            base.Tables.Add(this.tableUZYTKOWNICY);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFILIA_CFG() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFILIE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFL_WYSYLKA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFL_WYSYLKA_DETALE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeKONTRAHENCI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLICZNIKI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeOPAKOWANIA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTOWARY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTRANSFER_DO_WYSLANIA() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTWR_MAGAZYNY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeUZYTKOWNICY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FILIA_CFGRowChangeEventHandler(object sender, FILIA_CFGRowChangeEvent e);
        
        public delegate void FILIERowChangeEventHandler(object sender, FILIERowChangeEvent e);
        
        public delegate void FL_WYSYLKARowChangeEventHandler(object sender, FL_WYSYLKARowChangeEvent e);
        
        public delegate void FL_WYSYLKA_DETALERowChangeEventHandler(object sender, FL_WYSYLKA_DETALERowChangeEvent e);
        
        public delegate void KONTRAHENCIRowChangeEventHandler(object sender, KONTRAHENCIRowChangeEvent e);
        
        public delegate void LICZNIKIRowChangeEventHandler(object sender, LICZNIKIRowChangeEvent e);
        
        public delegate void OPAKOWANIARowChangeEventHandler(object sender, OPAKOWANIARowChangeEvent e);
        
        public delegate void TOWARYRowChangeEventHandler(object sender, TOWARYRowChangeEvent e);
        
        public delegate void TRANSFER_DO_WYSLANIARowChangeEventHandler(object sender, TRANSFER_DO_WYSLANIARowChangeEvent e);
        
        public delegate void TWR_MAGAZYNYRowChangeEventHandler(object sender, TWR_MAGAZYNYRowChangeEvent e);
        
        public delegate void UZYTKOWNICYRowChangeEventHandler(object sender, UZYTKOWNICYRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FILIA_CFGDataTable : global::System.Data.TypedTableBase<FILIA_CFGRow> {
            
            private global::System.Data.DataColumn columnFLACFG_ID;
            
            private global::System.Data.DataColumn columnFLACFG_NAZWA;
            
            private global::System.Data.DataColumn columnFLACFG_ADRES;
            
            private global::System.Data.DataColumn columnFLACFG_NAZWA_PELNA;
            
            private global::System.Data.DataColumn columnFLACFG_KTR_ID;
            
            private global::System.Data.DataColumn columnFLACFG_FTP_ADRES;
            
            private global::System.Data.DataColumn columnFLACFG_FTP_LOGIN;
            
            private global::System.Data.DataColumn columnFLACFG_FTP_HASLO;
            
            private global::System.Data.DataColumn columnFLACFG_PRZEDROSTEK;
            
            private global::System.Data.DataColumn columnFLACFG_FTP_KATALOG;
            
            private global::System.Data.DataColumn columnFLA_NR_WETERYNARYJNY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGDataTable() {
                this.TableName = "FILIA_CFG";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FILIA_CFGDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_IDColumn {
                get {
                    return this.columnFLACFG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_NAZWAColumn {
                get {
                    return this.columnFLACFG_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_ADRESColumn {
                get {
                    return this.columnFLACFG_ADRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_NAZWA_PELNAColumn {
                get {
                    return this.columnFLACFG_NAZWA_PELNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_KTR_IDColumn {
                get {
                    return this.columnFLACFG_KTR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_FTP_ADRESColumn {
                get {
                    return this.columnFLACFG_FTP_ADRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_FTP_LOGINColumn {
                get {
                    return this.columnFLACFG_FTP_LOGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_FTP_HASLOColumn {
                get {
                    return this.columnFLACFG_FTP_HASLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_PRZEDROSTEKColumn {
                get {
                    return this.columnFLACFG_PRZEDROSTEK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLACFG_FTP_KATALOGColumn {
                get {
                    return this.columnFLACFG_FTP_KATALOG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_NR_WETERYNARYJNYColumn {
                get {
                    return this.columnFLA_NR_WETERYNARYJNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRow this[int index] {
                get {
                    return ((FILIA_CFGRow)(this.Rows[index]));
                }
            }
            
            public event FILIA_CFGRowChangeEventHandler FILIA_CFGRowChanging;
            
            public event FILIA_CFGRowChangeEventHandler FILIA_CFGRowChanged;
            
            public event FILIA_CFGRowChangeEventHandler FILIA_CFGRowDeleting;
            
            public event FILIA_CFGRowChangeEventHandler FILIA_CFGRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFILIA_CFGRow(FILIA_CFGRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRow AddFILIA_CFGRow(long FLACFG_ID, string FLACFG_NAZWA, string FLACFG_ADRES, string FLACFG_NAZWA_PELNA, long FLACFG_KTR_ID, string FLACFG_FTP_ADRES, string FLACFG_FTP_LOGIN, string FLACFG_FTP_HASLO, string FLACFG_PRZEDROSTEK, string FLACFG_FTP_KATALOG, string FLA_NR_WETERYNARYJNY) {
                FILIA_CFGRow rowFILIA_CFGRow = ((FILIA_CFGRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FLACFG_ID,
                        FLACFG_NAZWA,
                        FLACFG_ADRES,
                        FLACFG_NAZWA_PELNA,
                        FLACFG_KTR_ID,
                        FLACFG_FTP_ADRES,
                        FLACFG_FTP_LOGIN,
                        FLACFG_FTP_HASLO,
                        FLACFG_PRZEDROSTEK,
                        FLACFG_FTP_KATALOG,
                        FLA_NR_WETERYNARYJNY};
                rowFILIA_CFGRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFILIA_CFGRow);
                return rowFILIA_CFGRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRow FindByFLACFG_ID(long FLACFG_ID) {
                return ((FILIA_CFGRow)(this.Rows.Find(new object[] {
                            FLACFG_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FILIA_CFGDataTable cln = ((FILIA_CFGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FILIA_CFGDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFLACFG_ID = base.Columns["FLACFG_ID"];
                this.columnFLACFG_NAZWA = base.Columns["FLACFG_NAZWA"];
                this.columnFLACFG_ADRES = base.Columns["FLACFG_ADRES"];
                this.columnFLACFG_NAZWA_PELNA = base.Columns["FLACFG_NAZWA_PELNA"];
                this.columnFLACFG_KTR_ID = base.Columns["FLACFG_KTR_ID"];
                this.columnFLACFG_FTP_ADRES = base.Columns["FLACFG_FTP_ADRES"];
                this.columnFLACFG_FTP_LOGIN = base.Columns["FLACFG_FTP_LOGIN"];
                this.columnFLACFG_FTP_HASLO = base.Columns["FLACFG_FTP_HASLO"];
                this.columnFLACFG_PRZEDROSTEK = base.Columns["FLACFG_PRZEDROSTEK"];
                this.columnFLACFG_FTP_KATALOG = base.Columns["FLACFG_FTP_KATALOG"];
                this.columnFLA_NR_WETERYNARYJNY = base.Columns["FLA_NR_WETERYNARYJNY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFLACFG_ID = new global::System.Data.DataColumn("FLACFG_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_ID);
                this.columnFLACFG_NAZWA = new global::System.Data.DataColumn("FLACFG_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_NAZWA);
                this.columnFLACFG_ADRES = new global::System.Data.DataColumn("FLACFG_ADRES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_ADRES);
                this.columnFLACFG_NAZWA_PELNA = new global::System.Data.DataColumn("FLACFG_NAZWA_PELNA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_NAZWA_PELNA);
                this.columnFLACFG_KTR_ID = new global::System.Data.DataColumn("FLACFG_KTR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_KTR_ID);
                this.columnFLACFG_FTP_ADRES = new global::System.Data.DataColumn("FLACFG_FTP_ADRES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_FTP_ADRES);
                this.columnFLACFG_FTP_LOGIN = new global::System.Data.DataColumn("FLACFG_FTP_LOGIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_FTP_LOGIN);
                this.columnFLACFG_FTP_HASLO = new global::System.Data.DataColumn("FLACFG_FTP_HASLO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_FTP_HASLO);
                this.columnFLACFG_PRZEDROSTEK = new global::System.Data.DataColumn("FLACFG_PRZEDROSTEK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_PRZEDROSTEK);
                this.columnFLACFG_FTP_KATALOG = new global::System.Data.DataColumn("FLACFG_FTP_KATALOG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLACFG_FTP_KATALOG);
                this.columnFLA_NR_WETERYNARYJNY = new global::System.Data.DataColumn("FLA_NR_WETERYNARYJNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_NR_WETERYNARYJNY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFLACFG_ID}, true));
                this.columnFLACFG_ID.AllowDBNull = false;
                this.columnFLACFG_ID.Unique = true;
                this.columnFLACFG_NAZWA.MaxLength = 30;
                this.columnFLACFG_ADRES.MaxLength = 60;
                this.columnFLACFG_NAZWA_PELNA.MaxLength = 80;
                this.columnFLACFG_FTP_ADRES.MaxLength = 20;
                this.columnFLACFG_FTP_LOGIN.MaxLength = 20;
                this.columnFLACFG_FTP_HASLO.MaxLength = 20;
                this.columnFLACFG_PRZEDROSTEK.MaxLength = 6;
                this.columnFLACFG_FTP_KATALOG.MaxLength = 50;
                this.columnFLA_NR_WETERYNARYJNY.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRow NewFILIA_CFGRow() {
                return ((FILIA_CFGRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FILIA_CFGRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FILIA_CFGRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FILIA_CFGRowChanged != null)) {
                    this.FILIA_CFGRowChanged(this, new FILIA_CFGRowChangeEvent(((FILIA_CFGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FILIA_CFGRowChanging != null)) {
                    this.FILIA_CFGRowChanging(this, new FILIA_CFGRowChangeEvent(((FILIA_CFGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FILIA_CFGRowDeleted != null)) {
                    this.FILIA_CFGRowDeleted(this, new FILIA_CFGRowChangeEvent(((FILIA_CFGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FILIA_CFGRowDeleting != null)) {
                    this.FILIA_CFGRowDeleting(this, new FILIA_CFGRowChangeEvent(((FILIA_CFGRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFILIA_CFGRow(FILIA_CFGRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FILIA_CFGDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FILIEDataTable : global::System.Data.TypedTableBase<FILIERow> {
            
            private global::System.Data.DataColumn columnFLA_ID;
            
            private global::System.Data.DataColumn columnFLA_NAZWA;
            
            private global::System.Data.DataColumn columnFLA_ADRES;
            
            private global::System.Data.DataColumn columnFLA_NAZWA_PELNA;
            
            private global::System.Data.DataColumn columnFLA_NR_WETERYNARYJNY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIEDataTable() {
                this.TableName = "FILIE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FILIEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_IDColumn {
                get {
                    return this.columnFLA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_NAZWAColumn {
                get {
                    return this.columnFLA_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_ADRESColumn {
                get {
                    return this.columnFLA_ADRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_NAZWA_PELNAColumn {
                get {
                    return this.columnFLA_NAZWA_PELNA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_NR_WETERYNARYJNYColumn {
                get {
                    return this.columnFLA_NR_WETERYNARYJNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIERow this[int index] {
                get {
                    return ((FILIERow)(this.Rows[index]));
                }
            }
            
            public event FILIERowChangeEventHandler FILIERowChanging;
            
            public event FILIERowChangeEventHandler FILIERowChanged;
            
            public event FILIERowChangeEventHandler FILIERowDeleting;
            
            public event FILIERowChangeEventHandler FILIERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFILIERow(FILIERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIERow AddFILIERow(long FLA_ID, string FLA_NAZWA, string FLA_ADRES, string FLA_NAZWA_PELNA, string FLA_NR_WETERYNARYJNY) {
                FILIERow rowFILIERow = ((FILIERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FLA_ID,
                        FLA_NAZWA,
                        FLA_ADRES,
                        FLA_NAZWA_PELNA,
                        FLA_NR_WETERYNARYJNY};
                rowFILIERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFILIERow);
                return rowFILIERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FILIEDataTable cln = ((FILIEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FILIEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFLA_ID = base.Columns["FLA_ID"];
                this.columnFLA_NAZWA = base.Columns["FLA_NAZWA"];
                this.columnFLA_ADRES = base.Columns["FLA_ADRES"];
                this.columnFLA_NAZWA_PELNA = base.Columns["FLA_NAZWA_PELNA"];
                this.columnFLA_NR_WETERYNARYJNY = base.Columns["FLA_NR_WETERYNARYJNY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFLA_ID = new global::System.Data.DataColumn("FLA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_ID);
                this.columnFLA_NAZWA = new global::System.Data.DataColumn("FLA_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_NAZWA);
                this.columnFLA_ADRES = new global::System.Data.DataColumn("FLA_ADRES", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_ADRES);
                this.columnFLA_NAZWA_PELNA = new global::System.Data.DataColumn("FLA_NAZWA_PELNA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_NAZWA_PELNA);
                this.columnFLA_NR_WETERYNARYJNY = new global::System.Data.DataColumn("FLA_NR_WETERYNARYJNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_NR_WETERYNARYJNY);
                this.columnFLA_NAZWA.MaxLength = 30;
                this.columnFLA_ADRES.MaxLength = 60;
                this.columnFLA_NAZWA_PELNA.MaxLength = 100;
                this.columnFLA_NR_WETERYNARYJNY.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIERow NewFILIERow() {
                return ((FILIERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FILIERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FILIERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FILIERowChanged != null)) {
                    this.FILIERowChanged(this, new FILIERowChangeEvent(((FILIERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FILIERowChanging != null)) {
                    this.FILIERowChanging(this, new FILIERowChangeEvent(((FILIERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FILIERowDeleted != null)) {
                    this.FILIERowDeleted(this, new FILIERowChangeEvent(((FILIERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FILIERowDeleting != null)) {
                    this.FILIERowDeleting(this, new FILIERowChangeEvent(((FILIERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFILIERow(FILIERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FILIEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FL_WYSYLKADataTable : global::System.Data.TypedTableBase<FL_WYSYLKARow> {
            
            private global::System.Data.DataColumn columnFLWY_ID;
            
            private global::System.Data.DataColumn columnFLWY_SUMA_ID;
            
            private global::System.Data.DataColumn columnFLWY_FLA_ID;
            
            private global::System.Data.DataColumn columnFLWY_DK_ID;
            
            private global::System.Data.DataColumn columnFLWY_PRZEWOZNIK_KTR_ID;
            
            private global::System.Data.DataColumn columnFLWY_POJ_NR_REJ;
            
            private global::System.Data.DataColumn columnFLWY_PRZYCZ_NR_REJ;
            
            private global::System.Data.DataColumn columnFLWY_DATA;
            
            private global::System.Data.DataColumn columnFLWY_Z_FILII;
            
            private global::System.Data.DataColumn columnFLWY_WYSLANY;
            
            private global::System.Data.DataColumn columnFLWY_WYSLANY_KIEDY;
            
            private global::System.Data.DataColumn columnFLWY_OTRZYMANY;
            
            private global::System.Data.DataColumn columnFLWY_OTRZYMANY_KIEDY;
            
            private global::System.Data.DataColumn columnFLWY_POTWIERDZONY;
            
            private global::System.Data.DataColumn columnFLWY_POTWIERDZONY_KIEDY;
            
            private global::System.Data.DataColumn columnFLWY_UTWORZONY_KIEDY;
            
            private global::System.Data.DataColumn columnFLWY_KIEDY;
            
            private global::System.Data.DataColumn columnFLWY_GDZIE;
            
            private global::System.Data.DataColumn columnFLWY_PRZED;
            
            private global::System.Data.DataColumn columnFLWY_NUMER;
            
            private global::System.Data.DataColumn columnFLWY_PRZR;
            
            private global::System.Data.DataColumn columnFLWY_NUMER_DOKUMENTU;
            
            private global::System.Data.DataColumn columnFLWY_KTO;
            
            private global::System.Data.DataColumn columnFLWY_UWAGI;
            
            private global::System.Data.DataColumn columnFLWY_KIEROWCA;
            
            private global::System.Data.DataColumn columnFLWY_FLA_ID_DO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKADataTable() {
                this.TableName = "FL_WYSYLKA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FL_WYSYLKADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_IDColumn {
                get {
                    return this.columnFLWY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_SUMA_IDColumn {
                get {
                    return this.columnFLWY_SUMA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_FLA_IDColumn {
                get {
                    return this.columnFLWY_FLA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_DK_IDColumn {
                get {
                    return this.columnFLWY_DK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_PRZEWOZNIK_KTR_IDColumn {
                get {
                    return this.columnFLWY_PRZEWOZNIK_KTR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_POJ_NR_REJColumn {
                get {
                    return this.columnFLWY_POJ_NR_REJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_PRZYCZ_NR_REJColumn {
                get {
                    return this.columnFLWY_PRZYCZ_NR_REJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_DATAColumn {
                get {
                    return this.columnFLWY_DATA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_Z_FILIIColumn {
                get {
                    return this.columnFLWY_Z_FILII;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_WYSLANYColumn {
                get {
                    return this.columnFLWY_WYSLANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_WYSLANY_KIEDYColumn {
                get {
                    return this.columnFLWY_WYSLANY_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_OTRZYMANYColumn {
                get {
                    return this.columnFLWY_OTRZYMANY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_OTRZYMANY_KIEDYColumn {
                get {
                    return this.columnFLWY_OTRZYMANY_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_POTWIERDZONYColumn {
                get {
                    return this.columnFLWY_POTWIERDZONY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_POTWIERDZONY_KIEDYColumn {
                get {
                    return this.columnFLWY_POTWIERDZONY_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_UTWORZONY_KIEDYColumn {
                get {
                    return this.columnFLWY_UTWORZONY_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_KIEDYColumn {
                get {
                    return this.columnFLWY_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_GDZIEColumn {
                get {
                    return this.columnFLWY_GDZIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_PRZEDColumn {
                get {
                    return this.columnFLWY_PRZED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_NUMERColumn {
                get {
                    return this.columnFLWY_NUMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_PRZRColumn {
                get {
                    return this.columnFLWY_PRZR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_NUMER_DOKUMENTUColumn {
                get {
                    return this.columnFLWY_NUMER_DOKUMENTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_KTOColumn {
                get {
                    return this.columnFLWY_KTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_UWAGIColumn {
                get {
                    return this.columnFLWY_UWAGI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_KIEROWCAColumn {
                get {
                    return this.columnFLWY_KIEROWCA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWY_FLA_ID_DOColumn {
                get {
                    return this.columnFLWY_FLA_ID_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARow this[int index] {
                get {
                    return ((FL_WYSYLKARow)(this.Rows[index]));
                }
            }
            
            public event FL_WYSYLKARowChangeEventHandler FL_WYSYLKARowChanging;
            
            public event FL_WYSYLKARowChangeEventHandler FL_WYSYLKARowChanged;
            
            public event FL_WYSYLKARowChangeEventHandler FL_WYSYLKARowDeleting;
            
            public event FL_WYSYLKARowChangeEventHandler FL_WYSYLKARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFL_WYSYLKARow(FL_WYSYLKARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARow AddFL_WYSYLKARow(
                        long FLWY_ID, 
                        long FLWY_SUMA_ID, 
                        long FLWY_FLA_ID, 
                        long FLWY_DK_ID, 
                        long FLWY_PRZEWOZNIK_KTR_ID, 
                        string FLWY_POJ_NR_REJ, 
                        string FLWY_PRZYCZ_NR_REJ, 
                        System.DateTime FLWY_DATA, 
                        string FLWY_Z_FILII, 
                        string FLWY_WYSLANY, 
                        System.DateTime FLWY_WYSLANY_KIEDY, 
                        string FLWY_OTRZYMANY, 
                        System.DateTime FLWY_OTRZYMANY_KIEDY, 
                        string FLWY_POTWIERDZONY, 
                        System.DateTime FLWY_POTWIERDZONY_KIEDY, 
                        System.DateTime FLWY_UTWORZONY_KIEDY, 
                        System.DateTime FLWY_KIEDY, 
                        string FLWY_GDZIE, 
                        string FLWY_PRZED, 
                        long FLWY_NUMER, 
                        string FLWY_PRZR, 
                        string FLWY_NUMER_DOKUMENTU, 
                        long FLWY_KTO, 
                        string FLWY_UWAGI, 
                        string FLWY_KIEROWCA, 
                        long FLWY_FLA_ID_DO) {
                FL_WYSYLKARow rowFL_WYSYLKARow = ((FL_WYSYLKARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FLWY_ID,
                        FLWY_SUMA_ID,
                        FLWY_FLA_ID,
                        FLWY_DK_ID,
                        FLWY_PRZEWOZNIK_KTR_ID,
                        FLWY_POJ_NR_REJ,
                        FLWY_PRZYCZ_NR_REJ,
                        FLWY_DATA,
                        FLWY_Z_FILII,
                        FLWY_WYSLANY,
                        FLWY_WYSLANY_KIEDY,
                        FLWY_OTRZYMANY,
                        FLWY_OTRZYMANY_KIEDY,
                        FLWY_POTWIERDZONY,
                        FLWY_POTWIERDZONY_KIEDY,
                        FLWY_UTWORZONY_KIEDY,
                        FLWY_KIEDY,
                        FLWY_GDZIE,
                        FLWY_PRZED,
                        FLWY_NUMER,
                        FLWY_PRZR,
                        FLWY_NUMER_DOKUMENTU,
                        FLWY_KTO,
                        FLWY_UWAGI,
                        FLWY_KIEROWCA,
                        FLWY_FLA_ID_DO};
                rowFL_WYSYLKARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFL_WYSYLKARow);
                return rowFL_WYSYLKARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARow FindByFLWY_IDFLWY_SUMA_ID(long FLWY_ID, long FLWY_SUMA_ID) {
                return ((FL_WYSYLKARow)(this.Rows.Find(new object[] {
                            FLWY_ID,
                            FLWY_SUMA_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FL_WYSYLKADataTable cln = ((FL_WYSYLKADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FL_WYSYLKADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFLWY_ID = base.Columns["FLWY_ID"];
                this.columnFLWY_SUMA_ID = base.Columns["FLWY_SUMA_ID"];
                this.columnFLWY_FLA_ID = base.Columns["FLWY_FLA_ID"];
                this.columnFLWY_DK_ID = base.Columns["FLWY_DK_ID"];
                this.columnFLWY_PRZEWOZNIK_KTR_ID = base.Columns["FLWY_PRZEWOZNIK_KTR_ID"];
                this.columnFLWY_POJ_NR_REJ = base.Columns["FLWY_POJ_NR_REJ"];
                this.columnFLWY_PRZYCZ_NR_REJ = base.Columns["FLWY_PRZYCZ_NR_REJ"];
                this.columnFLWY_DATA = base.Columns["FLWY_DATA"];
                this.columnFLWY_Z_FILII = base.Columns["FLWY_Z_FILII"];
                this.columnFLWY_WYSLANY = base.Columns["FLWY_WYSLANY"];
                this.columnFLWY_WYSLANY_KIEDY = base.Columns["FLWY_WYSLANY_KIEDY"];
                this.columnFLWY_OTRZYMANY = base.Columns["FLWY_OTRZYMANY"];
                this.columnFLWY_OTRZYMANY_KIEDY = base.Columns["FLWY_OTRZYMANY_KIEDY"];
                this.columnFLWY_POTWIERDZONY = base.Columns["FLWY_POTWIERDZONY"];
                this.columnFLWY_POTWIERDZONY_KIEDY = base.Columns["FLWY_POTWIERDZONY_KIEDY"];
                this.columnFLWY_UTWORZONY_KIEDY = base.Columns["FLWY_UTWORZONY_KIEDY"];
                this.columnFLWY_KIEDY = base.Columns["FLWY_KIEDY"];
                this.columnFLWY_GDZIE = base.Columns["FLWY_GDZIE"];
                this.columnFLWY_PRZED = base.Columns["FLWY_PRZED"];
                this.columnFLWY_NUMER = base.Columns["FLWY_NUMER"];
                this.columnFLWY_PRZR = base.Columns["FLWY_PRZR"];
                this.columnFLWY_NUMER_DOKUMENTU = base.Columns["FLWY_NUMER_DOKUMENTU"];
                this.columnFLWY_KTO = base.Columns["FLWY_KTO"];
                this.columnFLWY_UWAGI = base.Columns["FLWY_UWAGI"];
                this.columnFLWY_KIEROWCA = base.Columns["FLWY_KIEROWCA"];
                this.columnFLWY_FLA_ID_DO = base.Columns["FLWY_FLA_ID_DO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFLWY_ID = new global::System.Data.DataColumn("FLWY_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_ID);
                this.columnFLWY_SUMA_ID = new global::System.Data.DataColumn("FLWY_SUMA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_SUMA_ID);
                this.columnFLWY_FLA_ID = new global::System.Data.DataColumn("FLWY_FLA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_FLA_ID);
                this.columnFLWY_DK_ID = new global::System.Data.DataColumn("FLWY_DK_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_DK_ID);
                this.columnFLWY_PRZEWOZNIK_KTR_ID = new global::System.Data.DataColumn("FLWY_PRZEWOZNIK_KTR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_PRZEWOZNIK_KTR_ID);
                this.columnFLWY_POJ_NR_REJ = new global::System.Data.DataColumn("FLWY_POJ_NR_REJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_POJ_NR_REJ);
                this.columnFLWY_PRZYCZ_NR_REJ = new global::System.Data.DataColumn("FLWY_PRZYCZ_NR_REJ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_PRZYCZ_NR_REJ);
                this.columnFLWY_DATA = new global::System.Data.DataColumn("FLWY_DATA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_DATA);
                this.columnFLWY_Z_FILII = new global::System.Data.DataColumn("FLWY_Z_FILII", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_Z_FILII);
                this.columnFLWY_WYSLANY = new global::System.Data.DataColumn("FLWY_WYSLANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_WYSLANY);
                this.columnFLWY_WYSLANY_KIEDY = new global::System.Data.DataColumn("FLWY_WYSLANY_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_WYSLANY_KIEDY);
                this.columnFLWY_OTRZYMANY = new global::System.Data.DataColumn("FLWY_OTRZYMANY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_OTRZYMANY);
                this.columnFLWY_OTRZYMANY_KIEDY = new global::System.Data.DataColumn("FLWY_OTRZYMANY_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_OTRZYMANY_KIEDY);
                this.columnFLWY_POTWIERDZONY = new global::System.Data.DataColumn("FLWY_POTWIERDZONY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_POTWIERDZONY);
                this.columnFLWY_POTWIERDZONY_KIEDY = new global::System.Data.DataColumn("FLWY_POTWIERDZONY_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_POTWIERDZONY_KIEDY);
                this.columnFLWY_UTWORZONY_KIEDY = new global::System.Data.DataColumn("FLWY_UTWORZONY_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_UTWORZONY_KIEDY);
                this.columnFLWY_KIEDY = new global::System.Data.DataColumn("FLWY_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_KIEDY);
                this.columnFLWY_GDZIE = new global::System.Data.DataColumn("FLWY_GDZIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_GDZIE);
                this.columnFLWY_PRZED = new global::System.Data.DataColumn("FLWY_PRZED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_PRZED);
                this.columnFLWY_NUMER = new global::System.Data.DataColumn("FLWY_NUMER", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_NUMER);
                this.columnFLWY_PRZR = new global::System.Data.DataColumn("FLWY_PRZR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_PRZR);
                this.columnFLWY_NUMER_DOKUMENTU = new global::System.Data.DataColumn("FLWY_NUMER_DOKUMENTU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_NUMER_DOKUMENTU);
                this.columnFLWY_KTO = new global::System.Data.DataColumn("FLWY_KTO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_KTO);
                this.columnFLWY_UWAGI = new global::System.Data.DataColumn("FLWY_UWAGI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_UWAGI);
                this.columnFLWY_KIEROWCA = new global::System.Data.DataColumn("FLWY_KIEROWCA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_KIEROWCA);
                this.columnFLWY_FLA_ID_DO = new global::System.Data.DataColumn("FLWY_FLA_ID_DO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWY_FLA_ID_DO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFLWY_ID,
                                this.columnFLWY_SUMA_ID}, true));
                this.columnFLWY_ID.AllowDBNull = false;
                this.columnFLWY_SUMA_ID.AllowDBNull = false;
                this.columnFLWY_POJ_NR_REJ.MaxLength = 20;
                this.columnFLWY_PRZYCZ_NR_REJ.MaxLength = 10;
                this.columnFLWY_Z_FILII.MaxLength = 1;
                this.columnFLWY_WYSLANY.MaxLength = 1;
                this.columnFLWY_OTRZYMANY.MaxLength = 1;
                this.columnFLWY_POTWIERDZONY.MaxLength = 1;
                this.columnFLWY_GDZIE.MaxLength = 10;
                this.columnFLWY_PRZED.MaxLength = 6;
                this.columnFLWY_PRZR.MaxLength = 3;
                this.columnFLWY_NUMER_DOKUMENTU.MaxLength = 20;
                this.columnFLWY_UWAGI.MaxLength = 400;
                this.columnFLWY_KIEROWCA.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARow NewFL_WYSYLKARow() {
                return ((FL_WYSYLKARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FL_WYSYLKARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FL_WYSYLKARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FL_WYSYLKARowChanged != null)) {
                    this.FL_WYSYLKARowChanged(this, new FL_WYSYLKARowChangeEvent(((FL_WYSYLKARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FL_WYSYLKARowChanging != null)) {
                    this.FL_WYSYLKARowChanging(this, new FL_WYSYLKARowChangeEvent(((FL_WYSYLKARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FL_WYSYLKARowDeleted != null)) {
                    this.FL_WYSYLKARowDeleted(this, new FL_WYSYLKARowChangeEvent(((FL_WYSYLKARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FL_WYSYLKARowDeleting != null)) {
                    this.FL_WYSYLKARowDeleting(this, new FL_WYSYLKARowChangeEvent(((FL_WYSYLKARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFL_WYSYLKARow(FL_WYSYLKARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FL_WYSYLKADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FL_WYSYLKA_DETALEDataTable : global::System.Data.TypedTableBase<FL_WYSYLKA_DETALERow> {
            
            private global::System.Data.DataColumn columnFLWYDT_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_FLWY_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_FLWY_SUMA_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_WZN_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_TWR_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_ILOSC;
            
            private global::System.Data.DataColumn columnFLWYDT_ILOSC_POTWIERDZONA;
            
            private global::System.Data.DataColumn columnFLWYDT_KOD_KRESKOWY;
            
            private global::System.Data.DataColumn columnFLWYDT_KTO;
            
            private global::System.Data.DataColumn columnFLWYDT_GDZIE;
            
            private global::System.Data.DataColumn columnFLWYDT_KIEDY;
            
            private global::System.Data.DataColumn columnFLWYDT_SUMA_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_DATA_ZLECENIA;
            
            private global::System.Data.DataColumn columnFLWYDT_OPK_ID;
            
            private global::System.Data.DataColumn columnFLWYDT_OPK_ILOSC;
            
            private global::System.Data.DataColumn columnFLWYDT_MG_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALEDataTable() {
                this.TableName = "FL_WYSYLKA_DETALE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FL_WYSYLKA_DETALEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_IDColumn {
                get {
                    return this.columnFLWYDT_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_FLWY_IDColumn {
                get {
                    return this.columnFLWYDT_FLWY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_FLWY_SUMA_IDColumn {
                get {
                    return this.columnFLWYDT_FLWY_SUMA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_WZN_IDColumn {
                get {
                    return this.columnFLWYDT_WZN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_TWR_IDColumn {
                get {
                    return this.columnFLWYDT_TWR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_ILOSCColumn {
                get {
                    return this.columnFLWYDT_ILOSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_ILOSC_POTWIERDZONAColumn {
                get {
                    return this.columnFLWYDT_ILOSC_POTWIERDZONA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_KOD_KRESKOWYColumn {
                get {
                    return this.columnFLWYDT_KOD_KRESKOWY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_KTOColumn {
                get {
                    return this.columnFLWYDT_KTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_GDZIEColumn {
                get {
                    return this.columnFLWYDT_GDZIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_KIEDYColumn {
                get {
                    return this.columnFLWYDT_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_SUMA_IDColumn {
                get {
                    return this.columnFLWYDT_SUMA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_DATA_ZLECENIAColumn {
                get {
                    return this.columnFLWYDT_DATA_ZLECENIA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_OPK_IDColumn {
                get {
                    return this.columnFLWYDT_OPK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_OPK_ILOSCColumn {
                get {
                    return this.columnFLWYDT_OPK_ILOSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLWYDT_MG_IDColumn {
                get {
                    return this.columnFLWYDT_MG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERow this[int index] {
                get {
                    return ((FL_WYSYLKA_DETALERow)(this.Rows[index]));
                }
            }
            
            public event FL_WYSYLKA_DETALERowChangeEventHandler FL_WYSYLKA_DETALERowChanging;
            
            public event FL_WYSYLKA_DETALERowChangeEventHandler FL_WYSYLKA_DETALERowChanged;
            
            public event FL_WYSYLKA_DETALERowChangeEventHandler FL_WYSYLKA_DETALERowDeleting;
            
            public event FL_WYSYLKA_DETALERowChangeEventHandler FL_WYSYLKA_DETALERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFL_WYSYLKA_DETALERow(FL_WYSYLKA_DETALERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERow AddFL_WYSYLKA_DETALERow(
                        long FLWYDT_ID, 
                        long FLWYDT_FLWY_ID, 
                        long FLWYDT_FLWY_SUMA_ID, 
                        long FLWYDT_WZN_ID, 
                        long FLWYDT_TWR_ID, 
                        decimal FLWYDT_ILOSC, 
                        decimal FLWYDT_ILOSC_POTWIERDZONA, 
                        string FLWYDT_KOD_KRESKOWY, 
                        long FLWYDT_KTO, 
                        int FLWYDT_GDZIE, 
                        System.DateTime FLWYDT_KIEDY, 
                        long FLWYDT_SUMA_ID, 
                        System.DateTime FLWYDT_DATA_ZLECENIA, 
                        long FLWYDT_OPK_ID, 
                        int FLWYDT_OPK_ILOSC, 
                        long FLWYDT_MG_ID) {
                FL_WYSYLKA_DETALERow rowFL_WYSYLKA_DETALERow = ((FL_WYSYLKA_DETALERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FLWYDT_ID,
                        FLWYDT_FLWY_ID,
                        FLWYDT_FLWY_SUMA_ID,
                        FLWYDT_WZN_ID,
                        FLWYDT_TWR_ID,
                        FLWYDT_ILOSC,
                        FLWYDT_ILOSC_POTWIERDZONA,
                        FLWYDT_KOD_KRESKOWY,
                        FLWYDT_KTO,
                        FLWYDT_GDZIE,
                        FLWYDT_KIEDY,
                        FLWYDT_SUMA_ID,
                        FLWYDT_DATA_ZLECENIA,
                        FLWYDT_OPK_ID,
                        FLWYDT_OPK_ILOSC,
                        FLWYDT_MG_ID};
                rowFL_WYSYLKA_DETALERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFL_WYSYLKA_DETALERow);
                return rowFL_WYSYLKA_DETALERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERow FindByFLWYDT_IDFLWYDT_SUMA_ID(long FLWYDT_ID, long FLWYDT_SUMA_ID) {
                return ((FL_WYSYLKA_DETALERow)(this.Rows.Find(new object[] {
                            FLWYDT_ID,
                            FLWYDT_SUMA_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FL_WYSYLKA_DETALEDataTable cln = ((FL_WYSYLKA_DETALEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FL_WYSYLKA_DETALEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFLWYDT_ID = base.Columns["FLWYDT_ID"];
                this.columnFLWYDT_FLWY_ID = base.Columns["FLWYDT_FLWY_ID"];
                this.columnFLWYDT_FLWY_SUMA_ID = base.Columns["FLWYDT_FLWY_SUMA_ID"];
                this.columnFLWYDT_WZN_ID = base.Columns["FLWYDT_WZN_ID"];
                this.columnFLWYDT_TWR_ID = base.Columns["FLWYDT_TWR_ID"];
                this.columnFLWYDT_ILOSC = base.Columns["FLWYDT_ILOSC"];
                this.columnFLWYDT_ILOSC_POTWIERDZONA = base.Columns["FLWYDT_ILOSC_POTWIERDZONA"];
                this.columnFLWYDT_KOD_KRESKOWY = base.Columns["FLWYDT_KOD_KRESKOWY"];
                this.columnFLWYDT_KTO = base.Columns["FLWYDT_KTO"];
                this.columnFLWYDT_GDZIE = base.Columns["FLWYDT_GDZIE"];
                this.columnFLWYDT_KIEDY = base.Columns["FLWYDT_KIEDY"];
                this.columnFLWYDT_SUMA_ID = base.Columns["FLWYDT_SUMA_ID"];
                this.columnFLWYDT_DATA_ZLECENIA = base.Columns["FLWYDT_DATA_ZLECENIA"];
                this.columnFLWYDT_OPK_ID = base.Columns["FLWYDT_OPK_ID"];
                this.columnFLWYDT_OPK_ILOSC = base.Columns["FLWYDT_OPK_ILOSC"];
                this.columnFLWYDT_MG_ID = base.Columns["FLWYDT_MG_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFLWYDT_ID = new global::System.Data.DataColumn("FLWYDT_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_ID);
                this.columnFLWYDT_FLWY_ID = new global::System.Data.DataColumn("FLWYDT_FLWY_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_FLWY_ID);
                this.columnFLWYDT_FLWY_SUMA_ID = new global::System.Data.DataColumn("FLWYDT_FLWY_SUMA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_FLWY_SUMA_ID);
                this.columnFLWYDT_WZN_ID = new global::System.Data.DataColumn("FLWYDT_WZN_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_WZN_ID);
                this.columnFLWYDT_TWR_ID = new global::System.Data.DataColumn("FLWYDT_TWR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_TWR_ID);
                this.columnFLWYDT_ILOSC = new global::System.Data.DataColumn("FLWYDT_ILOSC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_ILOSC);
                this.columnFLWYDT_ILOSC_POTWIERDZONA = new global::System.Data.DataColumn("FLWYDT_ILOSC_POTWIERDZONA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_ILOSC_POTWIERDZONA);
                this.columnFLWYDT_KOD_KRESKOWY = new global::System.Data.DataColumn("FLWYDT_KOD_KRESKOWY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_KOD_KRESKOWY);
                this.columnFLWYDT_KTO = new global::System.Data.DataColumn("FLWYDT_KTO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_KTO);
                this.columnFLWYDT_GDZIE = new global::System.Data.DataColumn("FLWYDT_GDZIE", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_GDZIE);
                this.columnFLWYDT_KIEDY = new global::System.Data.DataColumn("FLWYDT_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_KIEDY);
                this.columnFLWYDT_SUMA_ID = new global::System.Data.DataColumn("FLWYDT_SUMA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_SUMA_ID);
                this.columnFLWYDT_DATA_ZLECENIA = new global::System.Data.DataColumn("FLWYDT_DATA_ZLECENIA", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_DATA_ZLECENIA);
                this.columnFLWYDT_OPK_ID = new global::System.Data.DataColumn("FLWYDT_OPK_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_OPK_ID);
                this.columnFLWYDT_OPK_ILOSC = new global::System.Data.DataColumn("FLWYDT_OPK_ILOSC", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_OPK_ILOSC);
                this.columnFLWYDT_MG_ID = new global::System.Data.DataColumn("FLWYDT_MG_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLWYDT_MG_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFLWYDT_ID,
                                this.columnFLWYDT_SUMA_ID}, true));
                this.columnFLWYDT_ID.AllowDBNull = false;
                this.columnFLWYDT_KOD_KRESKOWY.MaxLength = 20;
                this.columnFLWYDT_SUMA_ID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERow NewFL_WYSYLKA_DETALERow() {
                return ((FL_WYSYLKA_DETALERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FL_WYSYLKA_DETALERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FL_WYSYLKA_DETALERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FL_WYSYLKA_DETALERowChanged != null)) {
                    this.FL_WYSYLKA_DETALERowChanged(this, new FL_WYSYLKA_DETALERowChangeEvent(((FL_WYSYLKA_DETALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FL_WYSYLKA_DETALERowChanging != null)) {
                    this.FL_WYSYLKA_DETALERowChanging(this, new FL_WYSYLKA_DETALERowChangeEvent(((FL_WYSYLKA_DETALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FL_WYSYLKA_DETALERowDeleted != null)) {
                    this.FL_WYSYLKA_DETALERowDeleted(this, new FL_WYSYLKA_DETALERowChangeEvent(((FL_WYSYLKA_DETALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FL_WYSYLKA_DETALERowDeleting != null)) {
                    this.FL_WYSYLKA_DETALERowDeleting(this, new FL_WYSYLKA_DETALERowChangeEvent(((FL_WYSYLKA_DETALERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFL_WYSYLKA_DETALERow(FL_WYSYLKA_DETALERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FL_WYSYLKA_DETALEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class KONTRAHENCIDataTable : global::System.Data.TypedTableBase<KONTRAHENCIRow> {
            
            private global::System.Data.DataColumn columnKTR_ID;
            
            private global::System.Data.DataColumn columnKTR_STATUS;
            
            private global::System.Data.DataColumn columnKTR_NUMER;
            
            private global::System.Data.DataColumn columnKTR_SKROT;
            
            private global::System.Data.DataColumn columnKTR_NAZWA;
            
            private global::System.Data.DataColumn columnKTR_KOD_POCZTOWY;
            
            private global::System.Data.DataColumn columnKTR_MIEJSCOWOSC;
            
            private global::System.Data.DataColumn columnKTR_ULICA;
            
            private global::System.Data.DataColumn columnKTR_NUMER_DOMU;
            
            private global::System.Data.DataColumn columnKTR_PRZEWOZNIK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIDataTable() {
                this.TableName = "KONTRAHENCI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KONTRAHENCIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_IDColumn {
                get {
                    return this.columnKTR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_STATUSColumn {
                get {
                    return this.columnKTR_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_NUMERColumn {
                get {
                    return this.columnKTR_NUMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_SKROTColumn {
                get {
                    return this.columnKTR_SKROT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_NAZWAColumn {
                get {
                    return this.columnKTR_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_KOD_POCZTOWYColumn {
                get {
                    return this.columnKTR_KOD_POCZTOWY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_MIEJSCOWOSCColumn {
                get {
                    return this.columnKTR_MIEJSCOWOSC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_ULICAColumn {
                get {
                    return this.columnKTR_ULICA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_NUMER_DOMUColumn {
                get {
                    return this.columnKTR_NUMER_DOMU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KTR_PRZEWOZNIKColumn {
                get {
                    return this.columnKTR_PRZEWOZNIK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRow this[int index] {
                get {
                    return ((KONTRAHENCIRow)(this.Rows[index]));
                }
            }
            
            public event KONTRAHENCIRowChangeEventHandler KONTRAHENCIRowChanging;
            
            public event KONTRAHENCIRowChangeEventHandler KONTRAHENCIRowChanged;
            
            public event KONTRAHENCIRowChangeEventHandler KONTRAHENCIRowDeleting;
            
            public event KONTRAHENCIRowChangeEventHandler KONTRAHENCIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddKONTRAHENCIRow(KONTRAHENCIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRow AddKONTRAHENCIRow(long KTR_ID, string KTR_STATUS, int KTR_NUMER, string KTR_SKROT, string KTR_NAZWA, string KTR_KOD_POCZTOWY, string KTR_MIEJSCOWOSC, string KTR_ULICA, string KTR_NUMER_DOMU, string KTR_PRZEWOZNIK) {
                KONTRAHENCIRow rowKONTRAHENCIRow = ((KONTRAHENCIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        KTR_ID,
                        KTR_STATUS,
                        KTR_NUMER,
                        KTR_SKROT,
                        KTR_NAZWA,
                        KTR_KOD_POCZTOWY,
                        KTR_MIEJSCOWOSC,
                        KTR_ULICA,
                        KTR_NUMER_DOMU,
                        KTR_PRZEWOZNIK};
                rowKONTRAHENCIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowKONTRAHENCIRow);
                return rowKONTRAHENCIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRow FindByKTR_ID(long KTR_ID) {
                return ((KONTRAHENCIRow)(this.Rows.Find(new object[] {
                            KTR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                KONTRAHENCIDataTable cln = ((KONTRAHENCIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new KONTRAHENCIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnKTR_ID = base.Columns["KTR_ID"];
                this.columnKTR_STATUS = base.Columns["KTR_STATUS"];
                this.columnKTR_NUMER = base.Columns["KTR_NUMER"];
                this.columnKTR_SKROT = base.Columns["KTR_SKROT"];
                this.columnKTR_NAZWA = base.Columns["KTR_NAZWA"];
                this.columnKTR_KOD_POCZTOWY = base.Columns["KTR_KOD_POCZTOWY"];
                this.columnKTR_MIEJSCOWOSC = base.Columns["KTR_MIEJSCOWOSC"];
                this.columnKTR_ULICA = base.Columns["KTR_ULICA"];
                this.columnKTR_NUMER_DOMU = base.Columns["KTR_NUMER_DOMU"];
                this.columnKTR_PRZEWOZNIK = base.Columns["KTR_PRZEWOZNIK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnKTR_ID = new global::System.Data.DataColumn("KTR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_ID);
                this.columnKTR_STATUS = new global::System.Data.DataColumn("KTR_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_STATUS);
                this.columnKTR_NUMER = new global::System.Data.DataColumn("KTR_NUMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_NUMER);
                this.columnKTR_SKROT = new global::System.Data.DataColumn("KTR_SKROT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_SKROT);
                this.columnKTR_NAZWA = new global::System.Data.DataColumn("KTR_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_NAZWA);
                this.columnKTR_KOD_POCZTOWY = new global::System.Data.DataColumn("KTR_KOD_POCZTOWY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_KOD_POCZTOWY);
                this.columnKTR_MIEJSCOWOSC = new global::System.Data.DataColumn("KTR_MIEJSCOWOSC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_MIEJSCOWOSC);
                this.columnKTR_ULICA = new global::System.Data.DataColumn("KTR_ULICA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_ULICA);
                this.columnKTR_NUMER_DOMU = new global::System.Data.DataColumn("KTR_NUMER_DOMU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_NUMER_DOMU);
                this.columnKTR_PRZEWOZNIK = new global::System.Data.DataColumn("KTR_PRZEWOZNIK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKTR_PRZEWOZNIK);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnKTR_ID}, true));
                this.columnKTR_ID.AllowDBNull = false;
                this.columnKTR_ID.Unique = true;
                this.columnKTR_STATUS.AllowDBNull = false;
                this.columnKTR_STATUS.MaxLength = 1;
                this.columnKTR_NUMER.AllowDBNull = false;
                this.columnKTR_SKROT.AllowDBNull = false;
                this.columnKTR_SKROT.MaxLength = 20;
                this.columnKTR_NAZWA.MaxLength = 160;
                this.columnKTR_KOD_POCZTOWY.MaxLength = 15;
                this.columnKTR_MIEJSCOWOSC.MaxLength = 50;
                this.columnKTR_ULICA.MaxLength = 50;
                this.columnKTR_NUMER_DOMU.MaxLength = 10;
                this.columnKTR_PRZEWOZNIK.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRow NewKONTRAHENCIRow() {
                return ((KONTRAHENCIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new KONTRAHENCIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(KONTRAHENCIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.KONTRAHENCIRowChanged != null)) {
                    this.KONTRAHENCIRowChanged(this, new KONTRAHENCIRowChangeEvent(((KONTRAHENCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.KONTRAHENCIRowChanging != null)) {
                    this.KONTRAHENCIRowChanging(this, new KONTRAHENCIRowChangeEvent(((KONTRAHENCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.KONTRAHENCIRowDeleted != null)) {
                    this.KONTRAHENCIRowDeleted(this, new KONTRAHENCIRowChangeEvent(((KONTRAHENCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.KONTRAHENCIRowDeleting != null)) {
                    this.KONTRAHENCIRowDeleting(this, new KONTRAHENCIRowChangeEvent(((KONTRAHENCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveKONTRAHENCIRow(KONTRAHENCIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "KONTRAHENCIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LICZNIKIDataTable : global::System.Data.TypedTableBase<LICZNIKIRow> {
            
            private global::System.Data.DataColumn columnLCZ_TABELA;
            
            private global::System.Data.DataColumn columnLCZ_NUMER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIDataTable() {
                this.TableName = "LICZNIKI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LICZNIKIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCZ_TABELAColumn {
                get {
                    return this.columnLCZ_TABELA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LCZ_NUMERColumn {
                get {
                    return this.columnLCZ_NUMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRow this[int index] {
                get {
                    return ((LICZNIKIRow)(this.Rows[index]));
                }
            }
            
            public event LICZNIKIRowChangeEventHandler LICZNIKIRowChanging;
            
            public event LICZNIKIRowChangeEventHandler LICZNIKIRowChanged;
            
            public event LICZNIKIRowChangeEventHandler LICZNIKIRowDeleting;
            
            public event LICZNIKIRowChangeEventHandler LICZNIKIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLICZNIKIRow(LICZNIKIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRow AddLICZNIKIRow(string LCZ_TABELA, long LCZ_NUMER) {
                LICZNIKIRow rowLICZNIKIRow = ((LICZNIKIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LCZ_TABELA,
                        LCZ_NUMER};
                rowLICZNIKIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLICZNIKIRow);
                return rowLICZNIKIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRow FindByLCZ_TABELA(string LCZ_TABELA) {
                return ((LICZNIKIRow)(this.Rows.Find(new object[] {
                            LCZ_TABELA})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LICZNIKIDataTable cln = ((LICZNIKIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LICZNIKIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLCZ_TABELA = base.Columns["LCZ_TABELA"];
                this.columnLCZ_NUMER = base.Columns["LCZ_NUMER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLCZ_TABELA = new global::System.Data.DataColumn("LCZ_TABELA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCZ_TABELA);
                this.columnLCZ_NUMER = new global::System.Data.DataColumn("LCZ_NUMER", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLCZ_NUMER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLCZ_TABELA}, true));
                this.columnLCZ_TABELA.AllowDBNull = false;
                this.columnLCZ_TABELA.Unique = true;
                this.columnLCZ_TABELA.MaxLength = 30;
                this.columnLCZ_NUMER.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRow NewLICZNIKIRow() {
                return ((LICZNIKIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LICZNIKIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LICZNIKIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LICZNIKIRowChanged != null)) {
                    this.LICZNIKIRowChanged(this, new LICZNIKIRowChangeEvent(((LICZNIKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LICZNIKIRowChanging != null)) {
                    this.LICZNIKIRowChanging(this, new LICZNIKIRowChangeEvent(((LICZNIKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LICZNIKIRowDeleted != null)) {
                    this.LICZNIKIRowDeleted(this, new LICZNIKIRowChangeEvent(((LICZNIKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LICZNIKIRowDeleting != null)) {
                    this.LICZNIKIRowDeleting(this, new LICZNIKIRowChangeEvent(((LICZNIKIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLICZNIKIRow(LICZNIKIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LICZNIKIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OPAKOWANIADataTable : global::System.Data.TypedTableBase<OPAKOWANIARow> {
            
            private global::System.Data.DataColumn columnOPK_ID;
            
            private global::System.Data.DataColumn columnOPK_SYMBOL;
            
            private global::System.Data.DataColumn columnOPK_TARA;
            
            private global::System.Data.DataColumn columnOPK_NAZWA;
            
            private global::System.Data.DataColumn columnOPK_AKTYWNY;
            
            private global::System.Data.DataColumn columnOPK_TWR_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIADataTable() {
                this.TableName = "OPAKOWANIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPAKOWANIADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_IDColumn {
                get {
                    return this.columnOPK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_SYMBOLColumn {
                get {
                    return this.columnOPK_SYMBOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_TARAColumn {
                get {
                    return this.columnOPK_TARA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_NAZWAColumn {
                get {
                    return this.columnOPK_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_AKTYWNYColumn {
                get {
                    return this.columnOPK_AKTYWNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OPK_TWR_IDColumn {
                get {
                    return this.columnOPK_TWR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARow this[int index] {
                get {
                    return ((OPAKOWANIARow)(this.Rows[index]));
                }
            }
            
            public event OPAKOWANIARowChangeEventHandler OPAKOWANIARowChanging;
            
            public event OPAKOWANIARowChangeEventHandler OPAKOWANIARowChanged;
            
            public event OPAKOWANIARowChangeEventHandler OPAKOWANIARowDeleting;
            
            public event OPAKOWANIARowChangeEventHandler OPAKOWANIARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddOPAKOWANIARow(OPAKOWANIARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARow AddOPAKOWANIARow(long OPK_ID, string OPK_SYMBOL, decimal OPK_TARA, string OPK_NAZWA, string OPK_AKTYWNY, long OPK_TWR_ID) {
                OPAKOWANIARow rowOPAKOWANIARow = ((OPAKOWANIARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        OPK_ID,
                        OPK_SYMBOL,
                        OPK_TARA,
                        OPK_NAZWA,
                        OPK_AKTYWNY,
                        OPK_TWR_ID};
                rowOPAKOWANIARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOPAKOWANIARow);
                return rowOPAKOWANIARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARow FindByOPK_ID(long OPK_ID) {
                return ((OPAKOWANIARow)(this.Rows.Find(new object[] {
                            OPK_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                OPAKOWANIADataTable cln = ((OPAKOWANIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OPAKOWANIADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnOPK_ID = base.Columns["OPK_ID"];
                this.columnOPK_SYMBOL = base.Columns["OPK_SYMBOL"];
                this.columnOPK_TARA = base.Columns["OPK_TARA"];
                this.columnOPK_NAZWA = base.Columns["OPK_NAZWA"];
                this.columnOPK_AKTYWNY = base.Columns["OPK_AKTYWNY"];
                this.columnOPK_TWR_ID = base.Columns["OPK_TWR_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnOPK_ID = new global::System.Data.DataColumn("OPK_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_ID);
                this.columnOPK_SYMBOL = new global::System.Data.DataColumn("OPK_SYMBOL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_SYMBOL);
                this.columnOPK_TARA = new global::System.Data.DataColumn("OPK_TARA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_TARA);
                this.columnOPK_NAZWA = new global::System.Data.DataColumn("OPK_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_NAZWA);
                this.columnOPK_AKTYWNY = new global::System.Data.DataColumn("OPK_AKTYWNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_AKTYWNY);
                this.columnOPK_TWR_ID = new global::System.Data.DataColumn("OPK_TWR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPK_TWR_ID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnOPK_ID}, true));
                this.columnOPK_ID.AllowDBNull = false;
                this.columnOPK_ID.Unique = true;
                this.columnOPK_SYMBOL.AllowDBNull = false;
                this.columnOPK_SYMBOL.MaxLength = 10;
                this.columnOPK_NAZWA.MaxLength = 30;
                this.columnOPK_AKTYWNY.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARow NewOPAKOWANIARow() {
                return ((OPAKOWANIARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OPAKOWANIARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(OPAKOWANIARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OPAKOWANIARowChanged != null)) {
                    this.OPAKOWANIARowChanged(this, new OPAKOWANIARowChangeEvent(((OPAKOWANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OPAKOWANIARowChanging != null)) {
                    this.OPAKOWANIARowChanging(this, new OPAKOWANIARowChangeEvent(((OPAKOWANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OPAKOWANIARowDeleted != null)) {
                    this.OPAKOWANIARowDeleted(this, new OPAKOWANIARowChangeEvent(((OPAKOWANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OPAKOWANIARowDeleting != null)) {
                    this.OPAKOWANIARowDeleting(this, new OPAKOWANIARowChangeEvent(((OPAKOWANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveOPAKOWANIARow(OPAKOWANIARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OPAKOWANIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TOWARYDataTable : global::System.Data.TypedTableBase<TOWARYRow> {
            
            private global::System.Data.DataColumn columnTWR_ID;
            
            private global::System.Data.DataColumn columnTWR_STATUS;
            
            private global::System.Data.DataColumn columnTWR_NUMER;
            
            private global::System.Data.DataColumn columnTWR_SKROT;
            
            private global::System.Data.DataColumn columnTWR_NAZWA;
            
            private global::System.Data.DataColumn columnTWR_KG;
            
            private global::System.Data.DataColumn columnTWR_SLJM_KOD;
            
            private global::System.Data.DataColumn columnTWR_CZY_ROZCHOD;
            
            private global::System.Data.DataColumn columnTWR_CZY_PRZYCHOD;
            
            private global::System.Data.DataColumn columnTWR_STAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYDataTable() {
                this.TableName = "TOWARY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TOWARYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_IDColumn {
                get {
                    return this.columnTWR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_STATUSColumn {
                get {
                    return this.columnTWR_STATUS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_NUMERColumn {
                get {
                    return this.columnTWR_NUMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_SKROTColumn {
                get {
                    return this.columnTWR_SKROT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_NAZWAColumn {
                get {
                    return this.columnTWR_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_KGColumn {
                get {
                    return this.columnTWR_KG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_SLJM_KODColumn {
                get {
                    return this.columnTWR_SLJM_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_CZY_ROZCHODColumn {
                get {
                    return this.columnTWR_CZY_ROZCHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_CZY_PRZYCHODColumn {
                get {
                    return this.columnTWR_CZY_PRZYCHOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_STANColumn {
                get {
                    return this.columnTWR_STAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRow this[int index] {
                get {
                    return ((TOWARYRow)(this.Rows[index]));
                }
            }
            
            public event TOWARYRowChangeEventHandler TOWARYRowChanging;
            
            public event TOWARYRowChangeEventHandler TOWARYRowChanged;
            
            public event TOWARYRowChangeEventHandler TOWARYRowDeleting;
            
            public event TOWARYRowChangeEventHandler TOWARYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTOWARYRow(TOWARYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRow AddTOWARYRow(long TWR_ID, string TWR_STATUS, int TWR_NUMER, string TWR_SKROT, string TWR_NAZWA, decimal TWR_KG, string TWR_SLJM_KOD, string TWR_CZY_ROZCHOD, string TWR_CZY_PRZYCHOD, decimal TWR_STAN) {
                TOWARYRow rowTOWARYRow = ((TOWARYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TWR_ID,
                        TWR_STATUS,
                        TWR_NUMER,
                        TWR_SKROT,
                        TWR_NAZWA,
                        TWR_KG,
                        TWR_SLJM_KOD,
                        TWR_CZY_ROZCHOD,
                        TWR_CZY_PRZYCHOD,
                        TWR_STAN};
                rowTOWARYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTOWARYRow);
                return rowTOWARYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRow FindByTWR_ID(long TWR_ID) {
                return ((TOWARYRow)(this.Rows.Find(new object[] {
                            TWR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TOWARYDataTable cln = ((TOWARYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TOWARYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTWR_ID = base.Columns["TWR_ID"];
                this.columnTWR_STATUS = base.Columns["TWR_STATUS"];
                this.columnTWR_NUMER = base.Columns["TWR_NUMER"];
                this.columnTWR_SKROT = base.Columns["TWR_SKROT"];
                this.columnTWR_NAZWA = base.Columns["TWR_NAZWA"];
                this.columnTWR_KG = base.Columns["TWR_KG"];
                this.columnTWR_SLJM_KOD = base.Columns["TWR_SLJM_KOD"];
                this.columnTWR_CZY_ROZCHOD = base.Columns["TWR_CZY_ROZCHOD"];
                this.columnTWR_CZY_PRZYCHOD = base.Columns["TWR_CZY_PRZYCHOD"];
                this.columnTWR_STAN = base.Columns["TWR_STAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTWR_ID = new global::System.Data.DataColumn("TWR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_ID);
                this.columnTWR_STATUS = new global::System.Data.DataColumn("TWR_STATUS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_STATUS);
                this.columnTWR_NUMER = new global::System.Data.DataColumn("TWR_NUMER", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_NUMER);
                this.columnTWR_SKROT = new global::System.Data.DataColumn("TWR_SKROT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_SKROT);
                this.columnTWR_NAZWA = new global::System.Data.DataColumn("TWR_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_NAZWA);
                this.columnTWR_KG = new global::System.Data.DataColumn("TWR_KG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_KG);
                this.columnTWR_SLJM_KOD = new global::System.Data.DataColumn("TWR_SLJM_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_SLJM_KOD);
                this.columnTWR_CZY_ROZCHOD = new global::System.Data.DataColumn("TWR_CZY_ROZCHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_CZY_ROZCHOD);
                this.columnTWR_CZY_PRZYCHOD = new global::System.Data.DataColumn("TWR_CZY_PRZYCHOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_CZY_PRZYCHOD);
                this.columnTWR_STAN = new global::System.Data.DataColumn("TWR_STAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_STAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTWR_ID}, true));
                this.columnTWR_ID.AllowDBNull = false;
                this.columnTWR_ID.Unique = true;
                this.columnTWR_STATUS.AllowDBNull = false;
                this.columnTWR_STATUS.MaxLength = 1;
                this.columnTWR_NUMER.AllowDBNull = false;
                this.columnTWR_SKROT.MaxLength = 40;
                this.columnTWR_NAZWA.MaxLength = 100;
                this.columnTWR_SLJM_KOD.MaxLength = 4;
                this.columnTWR_CZY_ROZCHOD.AllowDBNull = false;
                this.columnTWR_CZY_ROZCHOD.MaxLength = 1;
                this.columnTWR_CZY_PRZYCHOD.AllowDBNull = false;
                this.columnTWR_CZY_PRZYCHOD.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRow NewTOWARYRow() {
                return ((TOWARYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TOWARYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TOWARYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TOWARYRowChanged != null)) {
                    this.TOWARYRowChanged(this, new TOWARYRowChangeEvent(((TOWARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TOWARYRowChanging != null)) {
                    this.TOWARYRowChanging(this, new TOWARYRowChangeEvent(((TOWARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TOWARYRowDeleted != null)) {
                    this.TOWARYRowDeleted(this, new TOWARYRowChangeEvent(((TOWARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TOWARYRowDeleting != null)) {
                    this.TOWARYRowDeleting(this, new TOWARYRowChangeEvent(((TOWARYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTOWARYRow(TOWARYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TOWARYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRANSFER_DO_WYSLANIADataTable : global::System.Data.TypedTableBase<TRANSFER_DO_WYSLANIARow> {
            
            private global::System.Data.DataColumn columnTRDW_ID;
            
            private global::System.Data.DataColumn columnTRDW_TABELA;
            
            private global::System.Data.DataColumn columnTRDW_TABELA_ID;
            
            private global::System.Data.DataColumn columnTRDW_KIEDY;
            
            private global::System.Data.DataColumn columnTRDW_KTO;
            
            private global::System.Data.DataColumn columnTRDW_GDZIE;
            
            private global::System.Data.DataColumn columnTRDW_WYSLANO;
            
            private global::System.Data.DataColumn columnTRDW_WYSLANO_KIEDY;
            
            private global::System.Data.DataColumn columnTRDW_PLIK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIADataTable() {
                this.TableName = "TRANSFER_DO_WYSLANIA";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSFER_DO_WYSLANIADataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_IDColumn {
                get {
                    return this.columnTRDW_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_TABELAColumn {
                get {
                    return this.columnTRDW_TABELA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_TABELA_IDColumn {
                get {
                    return this.columnTRDW_TABELA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_KIEDYColumn {
                get {
                    return this.columnTRDW_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_KTOColumn {
                get {
                    return this.columnTRDW_KTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_GDZIEColumn {
                get {
                    return this.columnTRDW_GDZIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_WYSLANOColumn {
                get {
                    return this.columnTRDW_WYSLANO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_WYSLANO_KIEDYColumn {
                get {
                    return this.columnTRDW_WYSLANO_KIEDY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TRDW_PLIKColumn {
                get {
                    return this.columnTRDW_PLIK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARow this[int index] {
                get {
                    return ((TRANSFER_DO_WYSLANIARow)(this.Rows[index]));
                }
            }
            
            public event TRANSFER_DO_WYSLANIARowChangeEventHandler TRANSFER_DO_WYSLANIARowChanging;
            
            public event TRANSFER_DO_WYSLANIARowChangeEventHandler TRANSFER_DO_WYSLANIARowChanged;
            
            public event TRANSFER_DO_WYSLANIARowChangeEventHandler TRANSFER_DO_WYSLANIARowDeleting;
            
            public event TRANSFER_DO_WYSLANIARowChangeEventHandler TRANSFER_DO_WYSLANIARowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTRANSFER_DO_WYSLANIARow(TRANSFER_DO_WYSLANIARow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARow AddTRANSFER_DO_WYSLANIARow(long TRDW_ID, string TRDW_TABELA, long TRDW_TABELA_ID, System.DateTime TRDW_KIEDY, long TRDW_KTO, long TRDW_GDZIE, string TRDW_WYSLANO, System.DateTime TRDW_WYSLANO_KIEDY, string TRDW_PLIK) {
                TRANSFER_DO_WYSLANIARow rowTRANSFER_DO_WYSLANIARow = ((TRANSFER_DO_WYSLANIARow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TRDW_ID,
                        TRDW_TABELA,
                        TRDW_TABELA_ID,
                        TRDW_KIEDY,
                        TRDW_KTO,
                        TRDW_GDZIE,
                        TRDW_WYSLANO,
                        TRDW_WYSLANO_KIEDY,
                        TRDW_PLIK};
                rowTRANSFER_DO_WYSLANIARow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRANSFER_DO_WYSLANIARow);
                return rowTRANSFER_DO_WYSLANIARow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARow FindByTRDW_ID(long TRDW_ID) {
                return ((TRANSFER_DO_WYSLANIARow)(this.Rows.Find(new object[] {
                            TRDW_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TRANSFER_DO_WYSLANIADataTable cln = ((TRANSFER_DO_WYSLANIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRANSFER_DO_WYSLANIADataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTRDW_ID = base.Columns["TRDW_ID"];
                this.columnTRDW_TABELA = base.Columns["TRDW_TABELA"];
                this.columnTRDW_TABELA_ID = base.Columns["TRDW_TABELA_ID"];
                this.columnTRDW_KIEDY = base.Columns["TRDW_KIEDY"];
                this.columnTRDW_KTO = base.Columns["TRDW_KTO"];
                this.columnTRDW_GDZIE = base.Columns["TRDW_GDZIE"];
                this.columnTRDW_WYSLANO = base.Columns["TRDW_WYSLANO"];
                this.columnTRDW_WYSLANO_KIEDY = base.Columns["TRDW_WYSLANO_KIEDY"];
                this.columnTRDW_PLIK = base.Columns["TRDW_PLIK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTRDW_ID = new global::System.Data.DataColumn("TRDW_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_ID);
                this.columnTRDW_TABELA = new global::System.Data.DataColumn("TRDW_TABELA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_TABELA);
                this.columnTRDW_TABELA_ID = new global::System.Data.DataColumn("TRDW_TABELA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_TABELA_ID);
                this.columnTRDW_KIEDY = new global::System.Data.DataColumn("TRDW_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_KIEDY);
                this.columnTRDW_KTO = new global::System.Data.DataColumn("TRDW_KTO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_KTO);
                this.columnTRDW_GDZIE = new global::System.Data.DataColumn("TRDW_GDZIE", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_GDZIE);
                this.columnTRDW_WYSLANO = new global::System.Data.DataColumn("TRDW_WYSLANO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_WYSLANO);
                this.columnTRDW_WYSLANO_KIEDY = new global::System.Data.DataColumn("TRDW_WYSLANO_KIEDY", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_WYSLANO_KIEDY);
                this.columnTRDW_PLIK = new global::System.Data.DataColumn("TRDW_PLIK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRDW_PLIK);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTRDW_ID}, true));
                this.columnTRDW_ID.AllowDBNull = false;
                this.columnTRDW_ID.Unique = true;
                this.columnTRDW_TABELA.AllowDBNull = false;
                this.columnTRDW_TABELA.MaxLength = 100;
                this.columnTRDW_TABELA_ID.AllowDBNull = false;
                this.columnTRDW_KIEDY.AllowDBNull = false;
                this.columnTRDW_KTO.AllowDBNull = false;
                this.columnTRDW_GDZIE.AllowDBNull = false;
                this.columnTRDW_WYSLANO.AllowDBNull = false;
                this.columnTRDW_WYSLANO.MaxLength = 1;
                this.columnTRDW_WYSLANO_KIEDY.AllowDBNull = false;
                this.columnTRDW_PLIK.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARow NewTRANSFER_DO_WYSLANIARow() {
                return ((TRANSFER_DO_WYSLANIARow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRANSFER_DO_WYSLANIARow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TRANSFER_DO_WYSLANIARow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRANSFER_DO_WYSLANIARowChanged != null)) {
                    this.TRANSFER_DO_WYSLANIARowChanged(this, new TRANSFER_DO_WYSLANIARowChangeEvent(((TRANSFER_DO_WYSLANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRANSFER_DO_WYSLANIARowChanging != null)) {
                    this.TRANSFER_DO_WYSLANIARowChanging(this, new TRANSFER_DO_WYSLANIARowChangeEvent(((TRANSFER_DO_WYSLANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRANSFER_DO_WYSLANIARowDeleted != null)) {
                    this.TRANSFER_DO_WYSLANIARowDeleted(this, new TRANSFER_DO_WYSLANIARowChangeEvent(((TRANSFER_DO_WYSLANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRANSFER_DO_WYSLANIARowDeleting != null)) {
                    this.TRANSFER_DO_WYSLANIARowDeleting(this, new TRANSFER_DO_WYSLANIARowChangeEvent(((TRANSFER_DO_WYSLANIARow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTRANSFER_DO_WYSLANIARow(TRANSFER_DO_WYSLANIARow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRANSFER_DO_WYSLANIADataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TWR_MAGAZYNYDataTable : global::System.Data.TypedTableBase<TWR_MAGAZYNYRow> {
            
            private global::System.Data.DataColumn columnTWRMG_MG_ID;
            
            private global::System.Data.DataColumn columnTWRMG_TWR_ID;
            
            private global::System.Data.DataColumn columnTWR_FLA_ID;
            
            private global::System.Data.DataColumn columnMG_KOD;
            
            private global::System.Data.DataColumn columnMG_NAZWA;
            
            private global::System.Data.DataColumn columnFLA_ID_DO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYDataTable() {
                this.TableName = "TWR_MAGAZYNY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TWR_MAGAZYNYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWRMG_MG_IDColumn {
                get {
                    return this.columnTWRMG_MG_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWRMG_TWR_IDColumn {
                get {
                    return this.columnTWRMG_TWR_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TWR_FLA_IDColumn {
                get {
                    return this.columnTWR_FLA_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MG_KODColumn {
                get {
                    return this.columnMG_KOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MG_NAZWAColumn {
                get {
                    return this.columnMG_NAZWA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLA_ID_DOColumn {
                get {
                    return this.columnFLA_ID_DO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRow this[int index] {
                get {
                    return ((TWR_MAGAZYNYRow)(this.Rows[index]));
                }
            }
            
            public event TWR_MAGAZYNYRowChangeEventHandler TWR_MAGAZYNYRowChanging;
            
            public event TWR_MAGAZYNYRowChangeEventHandler TWR_MAGAZYNYRowChanged;
            
            public event TWR_MAGAZYNYRowChangeEventHandler TWR_MAGAZYNYRowDeleting;
            
            public event TWR_MAGAZYNYRowChangeEventHandler TWR_MAGAZYNYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTWR_MAGAZYNYRow(TWR_MAGAZYNYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRow AddTWR_MAGAZYNYRow(long TWRMG_MG_ID, long TWRMG_TWR_ID, long TWR_FLA_ID, string MG_KOD, string MG_NAZWA, long FLA_ID_DO) {
                TWR_MAGAZYNYRow rowTWR_MAGAZYNYRow = ((TWR_MAGAZYNYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TWRMG_MG_ID,
                        TWRMG_TWR_ID,
                        TWR_FLA_ID,
                        MG_KOD,
                        MG_NAZWA,
                        FLA_ID_DO};
                rowTWR_MAGAZYNYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTWR_MAGAZYNYRow);
                return rowTWR_MAGAZYNYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRow FindByTWRMG_MG_IDTWRMG_TWR_ID(long TWRMG_MG_ID, long TWRMG_TWR_ID) {
                return ((TWR_MAGAZYNYRow)(this.Rows.Find(new object[] {
                            TWRMG_MG_ID,
                            TWRMG_TWR_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TWR_MAGAZYNYDataTable cln = ((TWR_MAGAZYNYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TWR_MAGAZYNYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTWRMG_MG_ID = base.Columns["TWRMG_MG_ID"];
                this.columnTWRMG_TWR_ID = base.Columns["TWRMG_TWR_ID"];
                this.columnTWR_FLA_ID = base.Columns["TWR_FLA_ID"];
                this.columnMG_KOD = base.Columns["MG_KOD"];
                this.columnMG_NAZWA = base.Columns["MG_NAZWA"];
                this.columnFLA_ID_DO = base.Columns["FLA_ID_DO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTWRMG_MG_ID = new global::System.Data.DataColumn("TWRMG_MG_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWRMG_MG_ID);
                this.columnTWRMG_TWR_ID = new global::System.Data.DataColumn("TWRMG_TWR_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWRMG_TWR_ID);
                this.columnTWR_FLA_ID = new global::System.Data.DataColumn("TWR_FLA_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTWR_FLA_ID);
                this.columnMG_KOD = new global::System.Data.DataColumn("MG_KOD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMG_KOD);
                this.columnMG_NAZWA = new global::System.Data.DataColumn("MG_NAZWA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMG_NAZWA);
                this.columnFLA_ID_DO = new global::System.Data.DataColumn("FLA_ID_DO", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLA_ID_DO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTWRMG_MG_ID,
                                this.columnTWRMG_TWR_ID}, true));
                this.columnTWRMG_MG_ID.AllowDBNull = false;
                this.columnTWRMG_TWR_ID.AllowDBNull = false;
                this.columnMG_KOD.MaxLength = 6;
                this.columnMG_NAZWA.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRow NewTWR_MAGAZYNYRow() {
                return ((TWR_MAGAZYNYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TWR_MAGAZYNYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TWR_MAGAZYNYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TWR_MAGAZYNYRowChanged != null)) {
                    this.TWR_MAGAZYNYRowChanged(this, new TWR_MAGAZYNYRowChangeEvent(((TWR_MAGAZYNYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TWR_MAGAZYNYRowChanging != null)) {
                    this.TWR_MAGAZYNYRowChanging(this, new TWR_MAGAZYNYRowChangeEvent(((TWR_MAGAZYNYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TWR_MAGAZYNYRowDeleted != null)) {
                    this.TWR_MAGAZYNYRowDeleted(this, new TWR_MAGAZYNYRowChangeEvent(((TWR_MAGAZYNYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TWR_MAGAZYNYRowDeleting != null)) {
                    this.TWR_MAGAZYNYRowDeleting(this, new TWR_MAGAZYNYRowChangeEvent(((TWR_MAGAZYNYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTWR_MAGAZYNYRow(TWR_MAGAZYNYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TWR_MAGAZYNYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UZYTKOWNICYDataTable : global::System.Data.TypedTableBase<UZYTKOWNICYRow> {
            
            private global::System.Data.DataColumn columnUZY_ID;
            
            private global::System.Data.DataColumn columnUZY_AKTYWNY;
            
            private global::System.Data.DataColumn columnUZY_IDENTYFIKATOR;
            
            private global::System.Data.DataColumn columnUZY_HASLO;
            
            private global::System.Data.DataColumn columnUZY_NAZWISKO;
            
            private global::System.Data.DataColumn columnUZY_IMIE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYDataTable() {
                this.TableName = "UZYTKOWNICY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UZYTKOWNICYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_IDColumn {
                get {
                    return this.columnUZY_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_AKTYWNYColumn {
                get {
                    return this.columnUZY_AKTYWNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_IDENTYFIKATORColumn {
                get {
                    return this.columnUZY_IDENTYFIKATOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_HASLOColumn {
                get {
                    return this.columnUZY_HASLO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_NAZWISKOColumn {
                get {
                    return this.columnUZY_NAZWISKO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UZY_IMIEColumn {
                get {
                    return this.columnUZY_IMIE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRow this[int index] {
                get {
                    return ((UZYTKOWNICYRow)(this.Rows[index]));
                }
            }
            
            public event UZYTKOWNICYRowChangeEventHandler UZYTKOWNICYRowChanging;
            
            public event UZYTKOWNICYRowChangeEventHandler UZYTKOWNICYRowChanged;
            
            public event UZYTKOWNICYRowChangeEventHandler UZYTKOWNICYRowDeleting;
            
            public event UZYTKOWNICYRowChangeEventHandler UZYTKOWNICYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddUZYTKOWNICYRow(UZYTKOWNICYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRow AddUZYTKOWNICYRow(long UZY_ID, string UZY_AKTYWNY, string UZY_IDENTYFIKATOR, string UZY_HASLO, string UZY_NAZWISKO, string UZY_IMIE) {
                UZYTKOWNICYRow rowUZYTKOWNICYRow = ((UZYTKOWNICYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        UZY_ID,
                        UZY_AKTYWNY,
                        UZY_IDENTYFIKATOR,
                        UZY_HASLO,
                        UZY_NAZWISKO,
                        UZY_IMIE};
                rowUZYTKOWNICYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUZYTKOWNICYRow);
                return rowUZYTKOWNICYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRow FindByUZY_ID(long UZY_ID) {
                return ((UZYTKOWNICYRow)(this.Rows.Find(new object[] {
                            UZY_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                UZYTKOWNICYDataTable cln = ((UZYTKOWNICYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UZYTKOWNICYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnUZY_ID = base.Columns["UZY_ID"];
                this.columnUZY_AKTYWNY = base.Columns["UZY_AKTYWNY"];
                this.columnUZY_IDENTYFIKATOR = base.Columns["UZY_IDENTYFIKATOR"];
                this.columnUZY_HASLO = base.Columns["UZY_HASLO"];
                this.columnUZY_NAZWISKO = base.Columns["UZY_NAZWISKO"];
                this.columnUZY_IMIE = base.Columns["UZY_IMIE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnUZY_ID = new global::System.Data.DataColumn("UZY_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_ID);
                this.columnUZY_AKTYWNY = new global::System.Data.DataColumn("UZY_AKTYWNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_AKTYWNY);
                this.columnUZY_IDENTYFIKATOR = new global::System.Data.DataColumn("UZY_IDENTYFIKATOR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_IDENTYFIKATOR);
                this.columnUZY_HASLO = new global::System.Data.DataColumn("UZY_HASLO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_HASLO);
                this.columnUZY_NAZWISKO = new global::System.Data.DataColumn("UZY_NAZWISKO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_NAZWISKO);
                this.columnUZY_IMIE = new global::System.Data.DataColumn("UZY_IMIE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUZY_IMIE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnUZY_ID}, true));
                this.columnUZY_ID.AllowDBNull = false;
                this.columnUZY_ID.Unique = true;
                this.columnUZY_AKTYWNY.AllowDBNull = false;
                this.columnUZY_AKTYWNY.MaxLength = 1;
                this.columnUZY_IDENTYFIKATOR.AllowDBNull = false;
                this.columnUZY_IDENTYFIKATOR.MaxLength = 20;
                this.columnUZY_HASLO.MaxLength = 32;
                this.columnUZY_NAZWISKO.AllowDBNull = false;
                this.columnUZY_NAZWISKO.MaxLength = 30;
                this.columnUZY_IMIE.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRow NewUZYTKOWNICYRow() {
                return ((UZYTKOWNICYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UZYTKOWNICYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(UZYTKOWNICYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UZYTKOWNICYRowChanged != null)) {
                    this.UZYTKOWNICYRowChanged(this, new UZYTKOWNICYRowChangeEvent(((UZYTKOWNICYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UZYTKOWNICYRowChanging != null)) {
                    this.UZYTKOWNICYRowChanging(this, new UZYTKOWNICYRowChangeEvent(((UZYTKOWNICYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UZYTKOWNICYRowDeleted != null)) {
                    this.UZYTKOWNICYRowDeleted(this, new UZYTKOWNICYRowChangeEvent(((UZYTKOWNICYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UZYTKOWNICYRowDeleting != null)) {
                    this.UZYTKOWNICYRowDeleting(this, new UZYTKOWNICYRowChangeEvent(((UZYTKOWNICYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveUZYTKOWNICYRow(UZYTKOWNICYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MOBIL_FILIADataSet ds = new MOBIL_FILIADataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UZYTKOWNICYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FILIA_CFGRow : global::System.Data.DataRow {
            
            private FILIA_CFGDataTable tableFILIA_CFG;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FILIA_CFGRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFILIA_CFG = ((FILIA_CFGDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLACFG_ID {
                get {
                    return ((long)(this[this.tableFILIA_CFG.FLACFG_IDColumn]));
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_NAZWA\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_ADRES {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_ADRESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_ADRES\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_ADRESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_NAZWA_PELNA {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_NAZWA_PELNAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_NAZWA_PELNA\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_NAZWA_PELNAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLACFG_KTR_ID {
                get {
                    try {
                        return ((long)(this[this.tableFILIA_CFG.FLACFG_KTR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_KTR_ID\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_KTR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_FTP_ADRES {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_FTP_ADRESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_FTP_ADRES\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_FTP_ADRESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_FTP_LOGIN {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_FTP_LOGINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_FTP_LOGIN\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_FTP_LOGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_FTP_HASLO {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_FTP_HASLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_FTP_HASLO\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_FTP_HASLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_PRZEDROSTEK {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_PRZEDROSTEKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_PRZEDROSTEK\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_PRZEDROSTEKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLACFG_FTP_KATALOG {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLACFG_FTP_KATALOGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLACFG_FTP_KATALOG\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLACFG_FTP_KATALOGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLA_NR_WETERYNARYJNY {
                get {
                    try {
                        return ((string)(this[this.tableFILIA_CFG.FLA_NR_WETERYNARYJNYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_NR_WETERYNARYJNY\' in table \'FILIA_CFG\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIA_CFG.FLA_NR_WETERYNARYJNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_NAZWANull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_NAZWANull() {
                this[this.tableFILIA_CFG.FLACFG_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_ADRESNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_ADRESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_ADRESNull() {
                this[this.tableFILIA_CFG.FLACFG_ADRESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_NAZWA_PELNANull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_NAZWA_PELNAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_NAZWA_PELNANull() {
                this[this.tableFILIA_CFG.FLACFG_NAZWA_PELNAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_KTR_IDNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_KTR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_KTR_IDNull() {
                this[this.tableFILIA_CFG.FLACFG_KTR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_FTP_ADRESNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_FTP_ADRESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_FTP_ADRESNull() {
                this[this.tableFILIA_CFG.FLACFG_FTP_ADRESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_FTP_LOGINNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_FTP_LOGINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_FTP_LOGINNull() {
                this[this.tableFILIA_CFG.FLACFG_FTP_LOGINColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_FTP_HASLONull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_FTP_HASLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_FTP_HASLONull() {
                this[this.tableFILIA_CFG.FLACFG_FTP_HASLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_PRZEDROSTEKNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_PRZEDROSTEKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_PRZEDROSTEKNull() {
                this[this.tableFILIA_CFG.FLACFG_PRZEDROSTEKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLACFG_FTP_KATALOGNull() {
                return this.IsNull(this.tableFILIA_CFG.FLACFG_FTP_KATALOGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLACFG_FTP_KATALOGNull() {
                this[this.tableFILIA_CFG.FLACFG_FTP_KATALOGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_NR_WETERYNARYJNYNull() {
                return this.IsNull(this.tableFILIA_CFG.FLA_NR_WETERYNARYJNYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_NR_WETERYNARYJNYNull() {
                this[this.tableFILIA_CFG.FLA_NR_WETERYNARYJNYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FILIERow : global::System.Data.DataRow {
            
            private FILIEDataTable tableFILIE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FILIERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFILIE = ((FILIEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLA_ID {
                get {
                    try {
                        return ((long)(this[this.tableFILIE.FLA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_ID\' in table \'FILIE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIE.FLA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLA_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableFILIE.FLA_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_NAZWA\' in table \'FILIE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIE.FLA_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLA_ADRES {
                get {
                    try {
                        return ((string)(this[this.tableFILIE.FLA_ADRESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_ADRES\' in table \'FILIE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIE.FLA_ADRESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLA_NAZWA_PELNA {
                get {
                    try {
                        return ((string)(this[this.tableFILIE.FLA_NAZWA_PELNAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_NAZWA_PELNA\' in table \'FILIE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIE.FLA_NAZWA_PELNAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLA_NR_WETERYNARYJNY {
                get {
                    try {
                        return ((string)(this[this.tableFILIE.FLA_NR_WETERYNARYJNYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_NR_WETERYNARYJNY\' in table \'FILIE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFILIE.FLA_NR_WETERYNARYJNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_IDNull() {
                return this.IsNull(this.tableFILIE.FLA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_IDNull() {
                this[this.tableFILIE.FLA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_NAZWANull() {
                return this.IsNull(this.tableFILIE.FLA_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_NAZWANull() {
                this[this.tableFILIE.FLA_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_ADRESNull() {
                return this.IsNull(this.tableFILIE.FLA_ADRESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_ADRESNull() {
                this[this.tableFILIE.FLA_ADRESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_NAZWA_PELNANull() {
                return this.IsNull(this.tableFILIE.FLA_NAZWA_PELNAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_NAZWA_PELNANull() {
                this[this.tableFILIE.FLA_NAZWA_PELNAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_NR_WETERYNARYJNYNull() {
                return this.IsNull(this.tableFILIE.FLA_NR_WETERYNARYJNYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_NR_WETERYNARYJNYNull() {
                this[this.tableFILIE.FLA_NR_WETERYNARYJNYColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FL_WYSYLKARow : global::System.Data.DataRow {
            
            private FL_WYSYLKADataTable tableFL_WYSYLKA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FL_WYSYLKARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFL_WYSYLKA = ((FL_WYSYLKADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_ID {
                get {
                    return ((long)(this[this.tableFL_WYSYLKA.FLWY_IDColumn]));
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_SUMA_ID {
                get {
                    return ((long)(this[this.tableFL_WYSYLKA.FLWY_SUMA_IDColumn]));
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_SUMA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_FLA_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_FLA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_FLA_ID\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_FLA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_DK_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_DK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_DK_ID\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_DK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_PRZEWOZNIK_KTR_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_PRZEWOZNIK_KTR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_PRZEWOZNIK_KTR_ID\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_PRZEWOZNIK_KTR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_POJ_NR_REJ {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_POJ_NR_REJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_POJ_NR_REJ\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_POJ_NR_REJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_PRZYCZ_NR_REJ {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_PRZYCZ_NR_REJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_PRZYCZ_NR_REJ\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_PRZYCZ_NR_REJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_DATA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_DATAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_DATA\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_DATAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_Z_FILII {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_Z_FILIIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_Z_FILII\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_Z_FILIIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_WYSLANY {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_WYSLANYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_WYSLANY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_WYSLANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_WYSLANY_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_WYSLANY_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_WYSLANY_KIEDY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_WYSLANY_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_OTRZYMANY {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_OTRZYMANYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_OTRZYMANY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_OTRZYMANYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_OTRZYMANY_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_OTRZYMANY_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_OTRZYMANY_KIEDY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_OTRZYMANY_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_POTWIERDZONY {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_POTWIERDZONY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_POTWIERDZONY_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONY_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_POTWIERDZONY_KIEDY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONY_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_UTWORZONY_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_UTWORZONY_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_UTWORZONY_KIEDY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_UTWORZONY_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWY_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA.FLWY_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_KIEDY\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_GDZIE {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_GDZIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_GDZIE\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_GDZIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_PRZED {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_PRZEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_PRZED\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_PRZEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_NUMER {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_NUMERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_NUMER\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_NUMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_PRZR {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_PRZRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_PRZR\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_PRZRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_NUMER_DOKUMENTU {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_NUMER_DOKUMENTUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_NUMER_DOKUMENTU\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_NUMER_DOKUMENTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_KTO {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_KTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_KTO\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_KTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_UWAGI {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_UWAGIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_UWAGI\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_UWAGIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWY_KIEROWCA {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA.FLWY_KIEROWCAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_KIEROWCA\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_KIEROWCAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWY_FLA_ID_DO {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA.FLWY_FLA_ID_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWY_FLA_ID_DO\' in table \'FL_WYSYLKA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA.FLWY_FLA_ID_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_FLA_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_FLA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_FLA_IDNull() {
                this[this.tableFL_WYSYLKA.FLWY_FLA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_DK_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_DK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_DK_IDNull() {
                this[this.tableFL_WYSYLKA.FLWY_DK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_PRZEWOZNIK_KTR_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_PRZEWOZNIK_KTR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_PRZEWOZNIK_KTR_IDNull() {
                this[this.tableFL_WYSYLKA.FLWY_PRZEWOZNIK_KTR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_POJ_NR_REJNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_POJ_NR_REJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_POJ_NR_REJNull() {
                this[this.tableFL_WYSYLKA.FLWY_POJ_NR_REJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_PRZYCZ_NR_REJNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_PRZYCZ_NR_REJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_PRZYCZ_NR_REJNull() {
                this[this.tableFL_WYSYLKA.FLWY_PRZYCZ_NR_REJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_DATANull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_DATAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_DATANull() {
                this[this.tableFL_WYSYLKA.FLWY_DATAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_Z_FILIINull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_Z_FILIIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_Z_FILIINull() {
                this[this.tableFL_WYSYLKA.FLWY_Z_FILIIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_WYSLANYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_WYSLANYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_WYSLANYNull() {
                this[this.tableFL_WYSYLKA.FLWY_WYSLANYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_WYSLANY_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_WYSLANY_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_WYSLANY_KIEDYNull() {
                this[this.tableFL_WYSYLKA.FLWY_WYSLANY_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_OTRZYMANYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_OTRZYMANYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_OTRZYMANYNull() {
                this[this.tableFL_WYSYLKA.FLWY_OTRZYMANYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_OTRZYMANY_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_OTRZYMANY_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_OTRZYMANY_KIEDYNull() {
                this[this.tableFL_WYSYLKA.FLWY_OTRZYMANY_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_POTWIERDZONYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_POTWIERDZONYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_POTWIERDZONYNull() {
                this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_POTWIERDZONY_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_POTWIERDZONY_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_POTWIERDZONY_KIEDYNull() {
                this[this.tableFL_WYSYLKA.FLWY_POTWIERDZONY_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_UTWORZONY_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_UTWORZONY_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_UTWORZONY_KIEDYNull() {
                this[this.tableFL_WYSYLKA.FLWY_UTWORZONY_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_KIEDYNull() {
                this[this.tableFL_WYSYLKA.FLWY_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_GDZIENull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_GDZIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_GDZIENull() {
                this[this.tableFL_WYSYLKA.FLWY_GDZIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_PRZEDNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_PRZEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_PRZEDNull() {
                this[this.tableFL_WYSYLKA.FLWY_PRZEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_NUMERNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_NUMERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_NUMERNull() {
                this[this.tableFL_WYSYLKA.FLWY_NUMERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_PRZRNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_PRZRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_PRZRNull() {
                this[this.tableFL_WYSYLKA.FLWY_PRZRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_NUMER_DOKUMENTUNull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_NUMER_DOKUMENTUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_NUMER_DOKUMENTUNull() {
                this[this.tableFL_WYSYLKA.FLWY_NUMER_DOKUMENTUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_KTONull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_KTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_KTONull() {
                this[this.tableFL_WYSYLKA.FLWY_KTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_UWAGINull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_UWAGIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_UWAGINull() {
                this[this.tableFL_WYSYLKA.FLWY_UWAGIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_KIEROWCANull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_KIEROWCAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_KIEROWCANull() {
                this[this.tableFL_WYSYLKA.FLWY_KIEROWCAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWY_FLA_ID_DONull() {
                return this.IsNull(this.tableFL_WYSYLKA.FLWY_FLA_ID_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWY_FLA_ID_DONull() {
                this[this.tableFL_WYSYLKA.FLWY_FLA_ID_DOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FL_WYSYLKA_DETALERow : global::System.Data.DataRow {
            
            private FL_WYSYLKA_DETALEDataTable tableFL_WYSYLKA_DETALE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FL_WYSYLKA_DETALERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFL_WYSYLKA_DETALE = ((FL_WYSYLKA_DETALEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_ID {
                get {
                    return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_IDColumn]));
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_FLWY_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_FLWY_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_FLWY_SUMA_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_SUMA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_FLWY_SUMA_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_SUMA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_WZN_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_WZN_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_WZN_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_WZN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_TWR_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_TWR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_TWR_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_TWR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLWYDT_ILOSC {
                get {
                    try {
                        return ((decimal)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_ILOSC\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FLWYDT_ILOSC_POTWIERDZONA {
                get {
                    try {
                        return ((decimal)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSC_POTWIERDZONAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_ILOSC_POTWIERDZONA\' in table \'FL_WYSYLKA_DETALE\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSC_POTWIERDZONAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FLWYDT_KOD_KRESKOWY {
                get {
                    try {
                        return ((string)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KOD_KRESKOWYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_KOD_KRESKOWY\' in table \'FL_WYSYLKA_DETALE\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KOD_KRESKOWYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_KTO {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_KTO\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FLWYDT_GDZIE {
                get {
                    try {
                        return ((int)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_GDZIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_GDZIE\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_GDZIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWYDT_KIEDY {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KIEDYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_KIEDY\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_SUMA_ID {
                get {
                    return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_SUMA_IDColumn]));
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_SUMA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FLWYDT_DATA_ZLECENIA {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_DATA_ZLECENIAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_DATA_ZLECENIA\' in table \'FL_WYSYLKA_DETALE\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_DATA_ZLECENIAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_OPK_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_OPK_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FLWYDT_OPK_ILOSC {
                get {
                    try {
                        return ((int)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_ILOSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_OPK_ILOSC\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_ILOSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLWYDT_MG_ID {
                get {
                    try {
                        return ((long)(this[this.tableFL_WYSYLKA_DETALE.FLWYDT_MG_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLWYDT_MG_ID\' in table \'FL_WYSYLKA_DETALE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFL_WYSYLKA_DETALE.FLWYDT_MG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_FLWY_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_FLWY_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_FLWY_SUMA_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_SUMA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_FLWY_SUMA_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_FLWY_SUMA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_WZN_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_WZN_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_WZN_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_WZN_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_TWR_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_TWR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_TWR_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_TWR_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_ILOSCNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_ILOSCNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_ILOSC_POTWIERDZONANull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSC_POTWIERDZONAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_ILOSC_POTWIERDZONANull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_ILOSC_POTWIERDZONAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_KOD_KRESKOWYNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_KOD_KRESKOWYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_KOD_KRESKOWYNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KOD_KRESKOWYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_KTONull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_KTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_KTONull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_GDZIENull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_GDZIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_GDZIENull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_GDZIEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_KIEDYNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_KIEDYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_KIEDYNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_KIEDYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_DATA_ZLECENIANull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_DATA_ZLECENIAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_DATA_ZLECENIANull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_DATA_ZLECENIAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_OPK_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_OPK_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_OPK_ILOSCNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_ILOSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_OPK_ILOSCNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_OPK_ILOSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLWYDT_MG_IDNull() {
                return this.IsNull(this.tableFL_WYSYLKA_DETALE.FLWYDT_MG_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLWYDT_MG_IDNull() {
                this[this.tableFL_WYSYLKA_DETALE.FLWYDT_MG_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class KONTRAHENCIRow : global::System.Data.DataRow {
            
            private KONTRAHENCIDataTable tableKONTRAHENCI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal KONTRAHENCIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableKONTRAHENCI = ((KONTRAHENCIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long KTR_ID {
                get {
                    return ((long)(this[this.tableKONTRAHENCI.KTR_IDColumn]));
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_STATUS {
                get {
                    return ((string)(this[this.tableKONTRAHENCI.KTR_STATUSColumn]));
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int KTR_NUMER {
                get {
                    return ((int)(this[this.tableKONTRAHENCI.KTR_NUMERColumn]));
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_NUMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_SKROT {
                get {
                    return ((string)(this[this.tableKONTRAHENCI.KTR_SKROTColumn]));
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_SKROTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_NAZWA\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_KOD_POCZTOWY {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_KOD_POCZTOWYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_KOD_POCZTOWY\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_KOD_POCZTOWYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_MIEJSCOWOSC {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_MIEJSCOWOSCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_MIEJSCOWOSC\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_MIEJSCOWOSCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_ULICA {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_ULICAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_ULICA\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_ULICAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_NUMER_DOMU {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_NUMER_DOMUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_NUMER_DOMU\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_NUMER_DOMUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string KTR_PRZEWOZNIK {
                get {
                    try {
                        return ((string)(this[this.tableKONTRAHENCI.KTR_PRZEWOZNIKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KTR_PRZEWOZNIK\' in table \'KONTRAHENCI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableKONTRAHENCI.KTR_PRZEWOZNIKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_NAZWANull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_NAZWANull() {
                this[this.tableKONTRAHENCI.KTR_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_KOD_POCZTOWYNull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_KOD_POCZTOWYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_KOD_POCZTOWYNull() {
                this[this.tableKONTRAHENCI.KTR_KOD_POCZTOWYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_MIEJSCOWOSCNull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_MIEJSCOWOSCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_MIEJSCOWOSCNull() {
                this[this.tableKONTRAHENCI.KTR_MIEJSCOWOSCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_ULICANull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_ULICAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_ULICANull() {
                this[this.tableKONTRAHENCI.KTR_ULICAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_NUMER_DOMUNull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_NUMER_DOMUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_NUMER_DOMUNull() {
                this[this.tableKONTRAHENCI.KTR_NUMER_DOMUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKTR_PRZEWOZNIKNull() {
                return this.IsNull(this.tableKONTRAHENCI.KTR_PRZEWOZNIKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKTR_PRZEWOZNIKNull() {
                this[this.tableKONTRAHENCI.KTR_PRZEWOZNIKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LICZNIKIRow : global::System.Data.DataRow {
            
            private LICZNIKIDataTable tableLICZNIKI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LICZNIKIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLICZNIKI = ((LICZNIKIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LCZ_TABELA {
                get {
                    return ((string)(this[this.tableLICZNIKI.LCZ_TABELAColumn]));
                }
                set {
                    this[this.tableLICZNIKI.LCZ_TABELAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LCZ_NUMER {
                get {
                    return ((long)(this[this.tableLICZNIKI.LCZ_NUMERColumn]));
                }
                set {
                    this[this.tableLICZNIKI.LCZ_NUMERColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OPAKOWANIARow : global::System.Data.DataRow {
            
            private OPAKOWANIADataTable tableOPAKOWANIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal OPAKOWANIARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOPAKOWANIA = ((OPAKOWANIADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OPK_ID {
                get {
                    return ((long)(this[this.tableOPAKOWANIA.OPK_IDColumn]));
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPK_SYMBOL {
                get {
                    return ((string)(this[this.tableOPAKOWANIA.OPK_SYMBOLColumn]));
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_SYMBOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal OPK_TARA {
                get {
                    try {
                        return ((decimal)(this[this.tableOPAKOWANIA.OPK_TARAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPK_TARA\' in table \'OPAKOWANIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_TARAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPK_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableOPAKOWANIA.OPK_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPK_NAZWA\' in table \'OPAKOWANIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OPK_AKTYWNY {
                get {
                    try {
                        return ((string)(this[this.tableOPAKOWANIA.OPK_AKTYWNYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPK_AKTYWNY\' in table \'OPAKOWANIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_AKTYWNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long OPK_TWR_ID {
                get {
                    try {
                        return ((long)(this[this.tableOPAKOWANIA.OPK_TWR_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPK_TWR_ID\' in table \'OPAKOWANIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableOPAKOWANIA.OPK_TWR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPK_TARANull() {
                return this.IsNull(this.tableOPAKOWANIA.OPK_TARAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPK_TARANull() {
                this[this.tableOPAKOWANIA.OPK_TARAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPK_NAZWANull() {
                return this.IsNull(this.tableOPAKOWANIA.OPK_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPK_NAZWANull() {
                this[this.tableOPAKOWANIA.OPK_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPK_AKTYWNYNull() {
                return this.IsNull(this.tableOPAKOWANIA.OPK_AKTYWNYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPK_AKTYWNYNull() {
                this[this.tableOPAKOWANIA.OPK_AKTYWNYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOPK_TWR_IDNull() {
                return this.IsNull(this.tableOPAKOWANIA.OPK_TWR_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOPK_TWR_IDNull() {
                this[this.tableOPAKOWANIA.OPK_TWR_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TOWARYRow : global::System.Data.DataRow {
            
            private TOWARYDataTable tableTOWARY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TOWARYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTOWARY = ((TOWARYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TWR_ID {
                get {
                    return ((long)(this[this.tableTOWARY.TWR_IDColumn]));
                }
                set {
                    this[this.tableTOWARY.TWR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_STATUS {
                get {
                    return ((string)(this[this.tableTOWARY.TWR_STATUSColumn]));
                }
                set {
                    this[this.tableTOWARY.TWR_STATUSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TWR_NUMER {
                get {
                    return ((int)(this[this.tableTOWARY.TWR_NUMERColumn]));
                }
                set {
                    this[this.tableTOWARY.TWR_NUMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_SKROT {
                get {
                    try {
                        return ((string)(this[this.tableTOWARY.TWR_SKROTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_SKROT\' in table \'TOWARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOWARY.TWR_SKROTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableTOWARY.TWR_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_NAZWA\' in table \'TOWARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOWARY.TWR_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TWR_KG {
                get {
                    try {
                        return ((decimal)(this[this.tableTOWARY.TWR_KGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_KG\' in table \'TOWARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOWARY.TWR_KGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_SLJM_KOD {
                get {
                    try {
                        return ((string)(this[this.tableTOWARY.TWR_SLJM_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_SLJM_KOD\' in table \'TOWARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOWARY.TWR_SLJM_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_CZY_ROZCHOD {
                get {
                    return ((string)(this[this.tableTOWARY.TWR_CZY_ROZCHODColumn]));
                }
                set {
                    this[this.tableTOWARY.TWR_CZY_ROZCHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TWR_CZY_PRZYCHOD {
                get {
                    return ((string)(this[this.tableTOWARY.TWR_CZY_PRZYCHODColumn]));
                }
                set {
                    this[this.tableTOWARY.TWR_CZY_PRZYCHODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TWR_STAN {
                get {
                    try {
                        return ((decimal)(this[this.tableTOWARY.TWR_STANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_STAN\' in table \'TOWARY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTOWARY.TWR_STANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_SKROTNull() {
                return this.IsNull(this.tableTOWARY.TWR_SKROTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_SKROTNull() {
                this[this.tableTOWARY.TWR_SKROTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_NAZWANull() {
                return this.IsNull(this.tableTOWARY.TWR_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_NAZWANull() {
                this[this.tableTOWARY.TWR_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_KGNull() {
                return this.IsNull(this.tableTOWARY.TWR_KGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_KGNull() {
                this[this.tableTOWARY.TWR_KGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_SLJM_KODNull() {
                return this.IsNull(this.tableTOWARY.TWR_SLJM_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_SLJM_KODNull() {
                this[this.tableTOWARY.TWR_SLJM_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_STANNull() {
                return this.IsNull(this.tableTOWARY.TWR_STANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_STANNull() {
                this[this.tableTOWARY.TWR_STANColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRANSFER_DO_WYSLANIARow : global::System.Data.DataRow {
            
            private TRANSFER_DO_WYSLANIADataTable tableTRANSFER_DO_WYSLANIA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TRANSFER_DO_WYSLANIARow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRANSFER_DO_WYSLANIA = ((TRANSFER_DO_WYSLANIADataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TRDW_ID {
                get {
                    return ((long)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_IDColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRDW_TABELA {
                get {
                    return ((string)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_TABELAColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_TABELAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TRDW_TABELA_ID {
                get {
                    return ((long)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_TABELA_IDColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_TABELA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRDW_KIEDY {
                get {
                    return ((global::System.DateTime)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_KIEDYColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TRDW_KTO {
                get {
                    return ((long)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_KTOColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_KTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TRDW_GDZIE {
                get {
                    return ((long)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_GDZIEColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_GDZIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRDW_WYSLANO {
                get {
                    return ((string)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_WYSLANOColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_WYSLANOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TRDW_WYSLANO_KIEDY {
                get {
                    return ((global::System.DateTime)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_WYSLANO_KIEDYColumn]));
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_WYSLANO_KIEDYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TRDW_PLIK {
                get {
                    try {
                        return ((string)(this[this.tableTRANSFER_DO_WYSLANIA.TRDW_PLIKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TRDW_PLIK\' in table \'TRANSFER_DO_WYSLANIA\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTRANSFER_DO_WYSLANIA.TRDW_PLIKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTRDW_PLIKNull() {
                return this.IsNull(this.tableTRANSFER_DO_WYSLANIA.TRDW_PLIKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTRDW_PLIKNull() {
                this[this.tableTRANSFER_DO_WYSLANIA.TRDW_PLIKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TWR_MAGAZYNYRow : global::System.Data.DataRow {
            
            private TWR_MAGAZYNYDataTable tableTWR_MAGAZYNY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TWR_MAGAZYNYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTWR_MAGAZYNY = ((TWR_MAGAZYNYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TWRMG_MG_ID {
                get {
                    return ((long)(this[this.tableTWR_MAGAZYNY.TWRMG_MG_IDColumn]));
                }
                set {
                    this[this.tableTWR_MAGAZYNY.TWRMG_MG_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TWRMG_TWR_ID {
                get {
                    return ((long)(this[this.tableTWR_MAGAZYNY.TWRMG_TWR_IDColumn]));
                }
                set {
                    this[this.tableTWR_MAGAZYNY.TWRMG_TWR_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long TWR_FLA_ID {
                get {
                    try {
                        return ((long)(this[this.tableTWR_MAGAZYNY.TWR_FLA_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TWR_FLA_ID\' in table \'TWR_MAGAZYNY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTWR_MAGAZYNY.TWR_FLA_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MG_KOD {
                get {
                    try {
                        return ((string)(this[this.tableTWR_MAGAZYNY.MG_KODColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MG_KOD\' in table \'TWR_MAGAZYNY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTWR_MAGAZYNY.MG_KODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MG_NAZWA {
                get {
                    try {
                        return ((string)(this[this.tableTWR_MAGAZYNY.MG_NAZWAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MG_NAZWA\' in table \'TWR_MAGAZYNY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTWR_MAGAZYNY.MG_NAZWAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FLA_ID_DO {
                get {
                    try {
                        return ((long)(this[this.tableTWR_MAGAZYNY.FLA_ID_DOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FLA_ID_DO\' in table \'TWR_MAGAZYNY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTWR_MAGAZYNY.FLA_ID_DOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTWR_FLA_IDNull() {
                return this.IsNull(this.tableTWR_MAGAZYNY.TWR_FLA_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTWR_FLA_IDNull() {
                this[this.tableTWR_MAGAZYNY.TWR_FLA_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMG_KODNull() {
                return this.IsNull(this.tableTWR_MAGAZYNY.MG_KODColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMG_KODNull() {
                this[this.tableTWR_MAGAZYNY.MG_KODColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMG_NAZWANull() {
                return this.IsNull(this.tableTWR_MAGAZYNY.MG_NAZWAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMG_NAZWANull() {
                this[this.tableTWR_MAGAZYNY.MG_NAZWAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLA_ID_DONull() {
                return this.IsNull(this.tableTWR_MAGAZYNY.FLA_ID_DOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLA_ID_DONull() {
                this[this.tableTWR_MAGAZYNY.FLA_ID_DOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UZYTKOWNICYRow : global::System.Data.DataRow {
            
            private UZYTKOWNICYDataTable tableUZYTKOWNICY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal UZYTKOWNICYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUZYTKOWNICY = ((UZYTKOWNICYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long UZY_ID {
                get {
                    return ((long)(this[this.tableUZYTKOWNICY.UZY_IDColumn]));
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UZY_AKTYWNY {
                get {
                    return ((string)(this[this.tableUZYTKOWNICY.UZY_AKTYWNYColumn]));
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_AKTYWNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UZY_IDENTYFIKATOR {
                get {
                    return ((string)(this[this.tableUZYTKOWNICY.UZY_IDENTYFIKATORColumn]));
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_IDENTYFIKATORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UZY_HASLO {
                get {
                    try {
                        return ((string)(this[this.tableUZYTKOWNICY.UZY_HASLOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UZY_HASLO\' in table \'UZYTKOWNICY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_HASLOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UZY_NAZWISKO {
                get {
                    return ((string)(this[this.tableUZYTKOWNICY.UZY_NAZWISKOColumn]));
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_NAZWISKOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UZY_IMIE {
                get {
                    try {
                        return ((string)(this[this.tableUZYTKOWNICY.UZY_IMIEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UZY_IMIE\' in table \'UZYTKOWNICY\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableUZYTKOWNICY.UZY_IMIEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUZY_HASLONull() {
                return this.IsNull(this.tableUZYTKOWNICY.UZY_HASLOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUZY_HASLONull() {
                this[this.tableUZYTKOWNICY.UZY_HASLOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUZY_IMIENull() {
                return this.IsNull(this.tableUZYTKOWNICY.UZY_IMIEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUZY_IMIENull() {
                this[this.tableUZYTKOWNICY.UZY_IMIEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class FILIA_CFGRowChangeEvent : global::System.EventArgs {
            
            private FILIA_CFGRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRowChangeEvent(FILIA_CFGRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIA_CFGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class FILIERowChangeEvent : global::System.EventArgs {
            
            private FILIERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIERowChangeEvent(FILIERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FILIERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class FL_WYSYLKARowChangeEvent : global::System.EventArgs {
            
            private FL_WYSYLKARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARowChangeEvent(FL_WYSYLKARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class FL_WYSYLKA_DETALERowChangeEvent : global::System.EventArgs {
            
            private FL_WYSYLKA_DETALERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERowChangeEvent(FL_WYSYLKA_DETALERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FL_WYSYLKA_DETALERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class KONTRAHENCIRowChangeEvent : global::System.EventArgs {
            
            private KONTRAHENCIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRowChangeEvent(KONTRAHENCIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public KONTRAHENCIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class LICZNIKIRowChangeEvent : global::System.EventArgs {
            
            private LICZNIKIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRowChangeEvent(LICZNIKIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LICZNIKIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class OPAKOWANIARowChangeEvent : global::System.EventArgs {
            
            private OPAKOWANIARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARowChangeEvent(OPAKOWANIARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public OPAKOWANIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class TOWARYRowChangeEvent : global::System.EventArgs {
            
            private TOWARYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRowChangeEvent(TOWARYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TOWARYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class TRANSFER_DO_WYSLANIARowChangeEvent : global::System.EventArgs {
            
            private TRANSFER_DO_WYSLANIARow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARowChangeEvent(TRANSFER_DO_WYSLANIARow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TRANSFER_DO_WYSLANIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class TWR_MAGAZYNYRowChangeEvent : global::System.EventArgs {
            
            private TWR_MAGAZYNYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRowChangeEvent(TWR_MAGAZYNYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TWR_MAGAZYNYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        public class UZYTKOWNICYRowChangeEvent : global::System.EventArgs {
            
            private UZYTKOWNICYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRowChangeEvent(UZYTKOWNICYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public UZYTKOWNICYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace MOBIL_FILIAv2.MOBIL_FILIADataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class FILIA_CFGTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FILIA_CFGTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FILIA_CFG";
            tableMapping.ColumnMappings.Add("FLACFG_ID", "FLACFG_ID");
            tableMapping.ColumnMappings.Add("FLACFG_NAZWA", "FLACFG_NAZWA");
            tableMapping.ColumnMappings.Add("FLACFG_ADRES", "FLACFG_ADRES");
            tableMapping.ColumnMappings.Add("FLACFG_NAZWA_PELNA", "FLACFG_NAZWA_PELNA");
            tableMapping.ColumnMappings.Add("FLACFG_KTR_ID", "FLACFG_KTR_ID");
            tableMapping.ColumnMappings.Add("FLACFG_FTP_ADRES", "FLACFG_FTP_ADRES");
            tableMapping.ColumnMappings.Add("FLACFG_FTP_LOGIN", "FLACFG_FTP_LOGIN");
            tableMapping.ColumnMappings.Add("FLACFG_FTP_HASLO", "FLACFG_FTP_HASLO");
            tableMapping.ColumnMappings.Add("FLACFG_PRZEDROSTEK", "FLACFG_PRZEDROSTEK");
            tableMapping.ColumnMappings.Add("FLACFG_FTP_KATALOG", "FLACFG_FTP_KATALOG");
            tableMapping.ColumnMappings.Add("FLA_NR_WETERYNARYJNY", "FLA_NR_WETERYNARYJNY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [FILIA_CFG] WHERE (([FLACFG_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [FILIA_CFG] ([FLACFG_ID], [FLACFG_NAZWA], [FLACFG_ADRES], [FLACFG_NAZWA_PELNA], [FLACFG_KTR_ID], [FLACFG_FTP_ADRES], [FLACFG_FTP_LOGIN], [FLACFG_FTP_HASLO], [FLACFG_PRZEDROSTEK], [FLACFG_FTP_KATALOG], [FLA_NR_WETERYNARYJNY]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ADRES", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_NAZWA_PELNA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_ADRES", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_LOGIN", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_HASLO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_PRZEDROSTEK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_KATALOG", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_NR_WETERYNARYJNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [FILIA_CFG] SET [FLACFG_ID] = @p1, [FLACFG_NAZWA] = @p2, [FLACFG_ADRES] = @p3, [FLACFG_NAZWA_PELNA] = @p4, [FLACFG_KTR_ID] = @p5, [FLACFG_FTP_ADRES] = @p6, [FLACFG_FTP_LOGIN] = @p7, [FLACFG_FTP_HASLO] = @p8, [FLACFG_PRZEDROSTEK] = @p9, [FLACFG_FTP_KATALOG] = @p10, [FLA_NR_WETERYNARYJNY] = @p11 WHERE (([FLACFG_ID] = @p12))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ADRES", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_NAZWA_PELNA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_ADRES", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_LOGIN", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_HASLO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_PRZEDROSTEK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_FTP_KATALOG", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_NR_WETERYNARYJNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLACFG_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [FLACFG_ID], [FLACFG_NAZWA], [FLACFG_ADRES], [FLACFG_NAZWA_PELNA], [FLACFG" +
                "_KTR_ID], [FLACFG_FTP_ADRES], [FLACFG_FTP_LOGIN], [FLACFG_FTP_HASLO], [FLACFG_PR" +
                "ZEDROSTEK], [FLACFG_FTP_KATALOG], [FLA_NR_WETERYNARYJNY] FROM [FILIA_CFG]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.FILIA_CFGDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.FILIA_CFGDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.FILIA_CFGDataTable dataTable = new MOBIL_FILIADataSet.FILIA_CFGDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.FILIA_CFGDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "FILIA_CFG");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, string p3, string p4, global::System.Nullable<long> p5, string p6, string p7, string p8, string p9, string p10, string p11) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11 == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(p11));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, string p3, string p4, global::System.Nullable<long> p5, string p6, string p7, string p8, string p9, string p10, string p11, long p12) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11 == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(p11));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(p12));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, string p3, string p4, global::System.Nullable<long> p5, string p6, string p7, string p8, string p9, string p10, string p11, long p12) {
            return this.Update(p12, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class FILIETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FILIETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FILIE";
            tableMapping.ColumnMappings.Add("FLA_ID", "FLA_ID");
            tableMapping.ColumnMappings.Add("FLA_NAZWA", "FLA_NAZWA");
            tableMapping.ColumnMappings.Add("FLA_ADRES", "FLA_ADRES");
            tableMapping.ColumnMappings.Add("FLA_NAZWA_PELNA", "FLA_NAZWA_PELNA");
            tableMapping.ColumnMappings.Add("FLA_NR_WETERYNARYJNY", "FLA_NR_WETERYNARYJNY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [FILIE] ([FLA_ID], [FLA_NAZWA], [FLA_ADRES], [FLA_NAZWA_PELNA], [FLA_" +
                "NR_WETERYNARYJNY]) VALUES (@p1, @p2, @p3, @p4, @p5)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_ADRES", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_NAZWA_PELNA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_NR_WETERYNARYJNY", global::System.Data.DataRowVersion.Current, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [FLA_ID], [FLA_NAZWA], [FLA_ADRES], [FLA_NAZWA_PELNA], [FLA_NR_WETERYNARYJ" +
                "NY] FROM [FILIE]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.FILIEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.FILIEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.FILIEDataTable dataTable = new MOBIL_FILIADataSet.FILIEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.FILIEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "FILIE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<long> p1, string p2, string p3, string p4, string p5) {
            if ((p1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((p2 == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class FL_WYSYLKATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FL_WYSYLKATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FL_WYSYLKA";
            tableMapping.ColumnMappings.Add("FLWY_ID", "FLWY_ID");
            tableMapping.ColumnMappings.Add("FLWY_SUMA_ID", "FLWY_SUMA_ID");
            tableMapping.ColumnMappings.Add("FLWY_FLA_ID", "FLWY_FLA_ID");
            tableMapping.ColumnMappings.Add("FLWY_DK_ID", "FLWY_DK_ID");
            tableMapping.ColumnMappings.Add("FLWY_PRZEWOZNIK_KTR_ID", "FLWY_PRZEWOZNIK_KTR_ID");
            tableMapping.ColumnMappings.Add("FLWY_POJ_NR_REJ", "FLWY_POJ_NR_REJ");
            tableMapping.ColumnMappings.Add("FLWY_PRZYCZ_NR_REJ", "FLWY_PRZYCZ_NR_REJ");
            tableMapping.ColumnMappings.Add("FLWY_DATA", "FLWY_DATA");
            tableMapping.ColumnMappings.Add("FLWY_Z_FILII", "FLWY_Z_FILII");
            tableMapping.ColumnMappings.Add("FLWY_WYSLANY", "FLWY_WYSLANY");
            tableMapping.ColumnMappings.Add("FLWY_WYSLANY_KIEDY", "FLWY_WYSLANY_KIEDY");
            tableMapping.ColumnMappings.Add("FLWY_OTRZYMANY", "FLWY_OTRZYMANY");
            tableMapping.ColumnMappings.Add("FLWY_OTRZYMANY_KIEDY", "FLWY_OTRZYMANY_KIEDY");
            tableMapping.ColumnMappings.Add("FLWY_POTWIERDZONY", "FLWY_POTWIERDZONY");
            tableMapping.ColumnMappings.Add("FLWY_POTWIERDZONY_KIEDY", "FLWY_POTWIERDZONY_KIEDY");
            tableMapping.ColumnMappings.Add("FLWY_UTWORZONY_KIEDY", "FLWY_UTWORZONY_KIEDY");
            tableMapping.ColumnMappings.Add("FLWY_KIEDY", "FLWY_KIEDY");
            tableMapping.ColumnMappings.Add("FLWY_GDZIE", "FLWY_GDZIE");
            tableMapping.ColumnMappings.Add("FLWY_PRZED", "FLWY_PRZED");
            tableMapping.ColumnMappings.Add("FLWY_NUMER", "FLWY_NUMER");
            tableMapping.ColumnMappings.Add("FLWY_PRZR", "FLWY_PRZR");
            tableMapping.ColumnMappings.Add("FLWY_NUMER_DOKUMENTU", "FLWY_NUMER_DOKUMENTU");
            tableMapping.ColumnMappings.Add("FLWY_KTO", "FLWY_KTO");
            tableMapping.ColumnMappings.Add("FLWY_UWAGI", "FLWY_UWAGI");
            tableMapping.ColumnMappings.Add("FLWY_KIEROWCA", "FLWY_KIEROWCA");
            tableMapping.ColumnMappings.Add("FLWY_FLA_ID_DO", "FLWY_FLA_ID_DO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [FL_WYSYLKA] WHERE (([FLWY_ID] = @p1) AND ([FLWY_SUMA_ID] = @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_SUMA_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [FL_WYSYLKA] ([FLWY_ID], [FLWY_SUMA_ID], [FLWY_FLA_ID], [FLWY_DK_ID], [FLWY_PRZEWOZNIK_KTR_ID], [FLWY_POJ_NR_REJ], [FLWY_PRZYCZ_NR_REJ], [FLWY_DATA], [FLWY_Z_FILII], [FLWY_WYSLANY], [FLWY_WYSLANY_KIEDY], [FLWY_OTRZYMANY], [FLWY_OTRZYMANY_KIEDY], [FLWY_POTWIERDZONY], [FLWY_POTWIERDZONY_KIEDY], [FLWY_UTWORZONY_KIEDY], [FLWY_KIEDY], [FLWY_GDZIE], [FLWY_PRZED], [FLWY_NUMER], [FLWY_PRZR], [FLWY_NUMER_DOKUMENTU], [FLWY_KTO], [FLWY_UWAGI], [FLWY_KIEROWCA], [FLWY_FLA_ID_DO]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16, @p17, @p18, @p19, @p20, @p21, @p22, @p23, @p24, @p25, @p26)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_FLA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_DK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZEWOZNIK_KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POJ_NR_REJ", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZYCZ_NR_REJ", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_DATA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_Z_FILII", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_WYSLANY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_WYSLANY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_OTRZYMANY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_OTRZYMANY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POTWIERDZONY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POTWIERDZONY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_UTWORZONY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZED", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZR", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_NUMER_DOKUMENTU", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_UWAGI", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KIEROWCA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_FLA_ID_DO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [FL_WYSYLKA] SET [FLWY_ID] = @p1, [FLWY_SUMA_ID] = @p2, [FLWY_FLA_ID] = @p3, [FLWY_DK_ID] = @p4, [FLWY_PRZEWOZNIK_KTR_ID] = @p5, [FLWY_POJ_NR_REJ] = @p6, [FLWY_PRZYCZ_NR_REJ] = @p7, [FLWY_DATA] = @p8, [FLWY_Z_FILII] = @p9, [FLWY_WYSLANY] = @p10, [FLWY_WYSLANY_KIEDY] = @p11, [FLWY_OTRZYMANY] = @p12, [FLWY_OTRZYMANY_KIEDY] = @p13, [FLWY_POTWIERDZONY] = @p14, [FLWY_POTWIERDZONY_KIEDY] = @p15, [FLWY_UTWORZONY_KIEDY] = @p16, [FLWY_KIEDY] = @p17, [FLWY_GDZIE] = @p18, [FLWY_PRZED] = @p19, [FLWY_NUMER] = @p20, [FLWY_PRZR] = @p21, [FLWY_NUMER_DOKUMENTU] = @p22, [FLWY_KTO] = @p23, [FLWY_UWAGI] = @p24, [FLWY_KIEROWCA] = @p25, [FLWY_FLA_ID_DO] = @p26 WHERE (([FLWY_ID] = @p27) AND ([FLWY_SUMA_ID] = @p28))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_FLA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_DK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZEWOZNIK_KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POJ_NR_REJ", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZYCZ_NR_REJ", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_DATA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_Z_FILII", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_WYSLANY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_WYSLANY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_OTRZYMANY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_OTRZYMANY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POTWIERDZONY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_POTWIERDZONY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_UTWORZONY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p19", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZED", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p20", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p21", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_PRZR", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p22", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_NUMER_DOKUMENTU", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p23", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p24", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_UWAGI", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p25", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_KIEROWCA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p26", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_FLA_ID_DO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p27", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p28", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWY_SUMA_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [FLWY_ID], [FLWY_SUMA_ID], [FLWY_FLA_ID], [FLWY_DK_ID], [FLWY_PRZEWOZNIK_KTR_ID], [FLWY_POJ_NR_REJ], [FLWY_PRZYCZ_NR_REJ], [FLWY_DATA], [FLWY_Z_FILII], [FLWY_WYSLANY], [FLWY_WYSLANY_KIEDY], [FLWY_OTRZYMANY], [FLWY_OTRZYMANY_KIEDY], [FLWY_POTWIERDZONY], [FLWY_POTWIERDZONY_KIEDY], [FLWY_UTWORZONY_KIEDY], [FLWY_KIEDY], [FLWY_GDZIE], [FLWY_PRZED], [FLWY_NUMER], [FLWY_PRZR], [FLWY_NUMER_DOKUMENTU], [FLWY_KTO], [FLWY_UWAGI], [FLWY_KIEROWCA], [FLWY_FLA_ID_DO] FROM [FL_WYSYLKA]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.FL_WYSYLKADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.FL_WYSYLKADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.FL_WYSYLKADataTable dataTable = new MOBIL_FILIADataSet.FL_WYSYLKADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.FL_WYSYLKADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "FL_WYSYLKA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1, long p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long p1, 
                    long p2, 
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    string p6, 
                    string p7, 
                    global::System.Nullable<global::System.DateTime> p8, 
                    string p9, 
                    string p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    string p12, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    string p14, 
                    global::System.Nullable<global::System.DateTime> p15, 
                    global::System.Nullable<global::System.DateTime> p16, 
                    global::System.Nullable<global::System.DateTime> p17, 
                    string p18, 
                    string p19, 
                    global::System.Nullable<long> p20, 
                    string p21, 
                    string p22, 
                    global::System.Nullable<long> p23, 
                    string p24, 
                    string p25, 
                    global::System.Nullable<long> p26) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12 == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14 == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(p14));
            }
            if ((p15.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((System.DateTime)(p15.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(p17.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p18 == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(p18));
            }
            if ((p19 == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p20.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((long)(p20.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21 == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(p21));
            }
            if ((p22 == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(p22));
            }
            if ((p23.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((long)(p23.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p24 == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25 == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(p25));
            }
            if ((p26.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((long)(p26.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long p1, 
                    long p2, 
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    string p6, 
                    string p7, 
                    global::System.Nullable<global::System.DateTime> p8, 
                    string p9, 
                    string p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    string p12, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    string p14, 
                    global::System.Nullable<global::System.DateTime> p15, 
                    global::System.Nullable<global::System.DateTime> p16, 
                    global::System.Nullable<global::System.DateTime> p17, 
                    string p18, 
                    string p19, 
                    global::System.Nullable<long> p20, 
                    string p21, 
                    string p22, 
                    global::System.Nullable<long> p23, 
                    string p24, 
                    string p25, 
                    global::System.Nullable<long> p26, 
                    long p27, 
                    long p28) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p10));
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((p12 == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(p12));
            }
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14 == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(p14));
            }
            if ((p15.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(p15.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((p17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(p17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((p18 == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(p18));
            }
            if ((p19 == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(p19));
            }
            if ((p20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((long)(p20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((p21 == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(p21));
            }
            if ((p22 == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(p22));
            }
            if ((p23.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((long)(p23.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((p24 == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(p24));
            }
            if ((p25 == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(p25));
            }
            if ((p26.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((long)(p26.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((long)(p27));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((long)(p28));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    string p6, 
                    string p7, 
                    global::System.Nullable<global::System.DateTime> p8, 
                    string p9, 
                    string p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    string p12, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    string p14, 
                    global::System.Nullable<global::System.DateTime> p15, 
                    global::System.Nullable<global::System.DateTime> p16, 
                    global::System.Nullable<global::System.DateTime> p17, 
                    string p18, 
                    string p19, 
                    global::System.Nullable<long> p20, 
                    string p21, 
                    string p22, 
                    global::System.Nullable<long> p23, 
                    string p24, 
                    string p25, 
                    global::System.Nullable<long> p26, 
                    long p27, 
                    long p28) {
            return this.Update(p27, p28, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15, p16, p17, p18, p19, p20, p21, p22, p23, p24, p25, p26, p27, p28);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class FL_WYSYLKA_DETALETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FL_WYSYLKA_DETALETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FL_WYSYLKA_DETALE";
            tableMapping.ColumnMappings.Add("FLWYDT_ID", "FLWYDT_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_FLWY_ID", "FLWYDT_FLWY_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_FLWY_SUMA_ID", "FLWYDT_FLWY_SUMA_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_WZN_ID", "FLWYDT_WZN_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_TWR_ID", "FLWYDT_TWR_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_ILOSC", "FLWYDT_ILOSC");
            tableMapping.ColumnMappings.Add("FLWYDT_ILOSC_POTWIERDZONA", "FLWYDT_ILOSC_POTWIERDZONA");
            tableMapping.ColumnMappings.Add("FLWYDT_KOD_KRESKOWY", "FLWYDT_KOD_KRESKOWY");
            tableMapping.ColumnMappings.Add("FLWYDT_KTO", "FLWYDT_KTO");
            tableMapping.ColumnMappings.Add("FLWYDT_GDZIE", "FLWYDT_GDZIE");
            tableMapping.ColumnMappings.Add("FLWYDT_KIEDY", "FLWYDT_KIEDY");
            tableMapping.ColumnMappings.Add("FLWYDT_SUMA_ID", "FLWYDT_SUMA_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_DATA_ZLECENIA", "FLWYDT_DATA_ZLECENIA");
            tableMapping.ColumnMappings.Add("FLWYDT_OPK_ID", "FLWYDT_OPK_ID");
            tableMapping.ColumnMappings.Add("FLWYDT_OPK_ILOSC", "FLWYDT_OPK_ILOSC");
            tableMapping.ColumnMappings.Add("FLWYDT_MG_ID", "FLWYDT_MG_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [FL_WYSYLKA_DETALE] WHERE (([FLWYDT_ID] = @p1) AND ([FLWYDT_SUMA_ID] " +
                "= @p2))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_SUMA_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [FL_WYSYLKA_DETALE] ([FLWYDT_ID], [FLWYDT_FLWY_ID], [FLWYDT_FLWY_SUMA_ID], [FLWYDT_WZN_ID], [FLWYDT_TWR_ID], [FLWYDT_ILOSC], [FLWYDT_ILOSC_POTWIERDZONA], [FLWYDT_KOD_KRESKOWY], [FLWYDT_KTO], [FLWYDT_GDZIE], [FLWYDT_KIEDY], [FLWYDT_SUMA_ID], [FLWYDT_DATA_ZLECENIA], [FLWYDT_OPK_ID], [FLWYDT_OPK_ILOSC], [FLWYDT_MG_ID]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13, @p14, @p15, @p16)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_FLWY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_FLWY_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_WZN_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ILOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ILOSC_POTWIERDZONA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KOD_KRESKOWY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_DATA_ZLECENIA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_OPK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_OPK_ILOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_MG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [FL_WYSYLKA_DETALE] SET [FLWYDT_ID] = @p1, [FLWYDT_FLWY_ID] = @p2, [FLWYDT_FLWY_SUMA_ID] = @p3, [FLWYDT_WZN_ID] = @p4, [FLWYDT_TWR_ID] = @p5, [FLWYDT_ILOSC] = @p6, [FLWYDT_ILOSC_POTWIERDZONA] = @p7, [FLWYDT_KOD_KRESKOWY] = @p8, [FLWYDT_KTO] = @p9, [FLWYDT_GDZIE] = @p10, [FLWYDT_KIEDY] = @p11, [FLWYDT_SUMA_ID] = @p12, [FLWYDT_DATA_ZLECENIA] = @p13, [FLWYDT_OPK_ID] = @p14, [FLWYDT_OPK_ILOSC] = @p15, [FLWYDT_MG_ID] = @p16 WHERE (([FLWYDT_ID] = @p17) AND ([FLWYDT_SUMA_ID] = @p18))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_FLWY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_FLWY_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_WZN_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ILOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ILOSC_POTWIERDZONA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KOD_KRESKOWY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p12", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_SUMA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p13", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_DATA_ZLECENIA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p14", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_OPK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p15", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_OPK_ILOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p16", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_MG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p17", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p18", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLWYDT_SUMA_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT [FLWYDT_ID], [FLWYDT_FLWY_ID], [FLWYDT_FLWY_SUMA_ID], [FLWYDT_WZN_ID], [FLWYDT_TWR_ID], [FLWYDT_ILOSC], [FLWYDT_ILOSC_POTWIERDZONA], [FLWYDT_KOD_KRESKOWY], [FLWYDT_KTO], [FLWYDT_GDZIE], [FLWYDT_KIEDY], [FLWYDT_SUMA_ID], [FLWYDT_DATA_ZLECENIA], [FLWYDT_OPK_ID], [FLWYDT_OPK_ILOSC], [FLWYDT_MG_ID] FROM [FL_WYSYLKA_DETALE]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.FL_WYSYLKA_DETALEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.FL_WYSYLKA_DETALEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.FL_WYSYLKA_DETALEDataTable dataTable = new MOBIL_FILIADataSet.FL_WYSYLKA_DETALEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.FL_WYSYLKA_DETALEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "FL_WYSYLKA_DETALE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1, long p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    long p1, 
                    global::System.Nullable<long> p2, 
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    global::System.Nullable<decimal> p6, 
                    global::System.Nullable<decimal> p7, 
                    string p8, 
                    global::System.Nullable<long> p9, 
                    global::System.Nullable<int> p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    long p12, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    global::System.Nullable<long> p14, 
                    global::System.Nullable<int> p15, 
                    global::System.Nullable<long> p16) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((long)(p2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((long)(p4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(p7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((long)(p9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((long)(p12));
            if ((p13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(p13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((long)(p14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((int)(p15.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((long)(p16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long p1, 
                    global::System.Nullable<long> p2, 
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    global::System.Nullable<decimal> p6, 
                    global::System.Nullable<decimal> p7, 
                    string p8, 
                    global::System.Nullable<long> p9, 
                    global::System.Nullable<int> p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    long p12, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    global::System.Nullable<long> p14, 
                    global::System.Nullable<int> p15, 
                    global::System.Nullable<long> p16, 
                    long p17, 
                    long p18) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(p2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(p4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((p5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(p5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(p7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((long)(p9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((p11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(p11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((long)(p12));
            if ((p13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(p13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((p14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((long)(p14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((p15.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((int)(p15.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((p16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((long)(p16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((long)(p17));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((long)(p18));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<long> p2, 
                    global::System.Nullable<long> p3, 
                    global::System.Nullable<long> p4, 
                    global::System.Nullable<long> p5, 
                    global::System.Nullable<decimal> p6, 
                    global::System.Nullable<decimal> p7, 
                    string p8, 
                    global::System.Nullable<long> p9, 
                    global::System.Nullable<int> p10, 
                    global::System.Nullable<global::System.DateTime> p11, 
                    global::System.Nullable<global::System.DateTime> p13, 
                    global::System.Nullable<long> p14, 
                    global::System.Nullable<int> p15, 
                    global::System.Nullable<long> p16, 
                    long p17, 
                    long p18) {
            return this.Update(p17, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p18, p13, p14, p15, p16, p17, p18);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class KONTRAHENCITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public KONTRAHENCITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "KONTRAHENCI";
            tableMapping.ColumnMappings.Add("KTR_ID", "KTR_ID");
            tableMapping.ColumnMappings.Add("KTR_STATUS", "KTR_STATUS");
            tableMapping.ColumnMappings.Add("KTR_NUMER", "KTR_NUMER");
            tableMapping.ColumnMappings.Add("KTR_SKROT", "KTR_SKROT");
            tableMapping.ColumnMappings.Add("KTR_NAZWA", "KTR_NAZWA");
            tableMapping.ColumnMappings.Add("KTR_KOD_POCZTOWY", "KTR_KOD_POCZTOWY");
            tableMapping.ColumnMappings.Add("KTR_MIEJSCOWOSC", "KTR_MIEJSCOWOSC");
            tableMapping.ColumnMappings.Add("KTR_ULICA", "KTR_ULICA");
            tableMapping.ColumnMappings.Add("KTR_NUMER_DOMU", "KTR_NUMER_DOMU");
            tableMapping.ColumnMappings.Add("KTR_PRZEWOZNIK", "KTR_PRZEWOZNIK");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [KONTRAHENCI] WHERE (([KTR_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [KONTRAHENCI] ([KTR_ID], [KTR_STATUS], [KTR_NUMER], [KTR_SKROT], [KTR" +
                "_NAZWA], [KTR_KOD_POCZTOWY], [KTR_MIEJSCOWOSC], [KTR_ULICA], [KTR_NUMER_DOMU], [" +
                "KTR_PRZEWOZNIK]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_STATUS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_SKROT", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_KOD_POCZTOWY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_MIEJSCOWOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ULICA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NUMER_DOMU", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_PRZEWOZNIK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [KONTRAHENCI] SET [KTR_ID] = @p1, [KTR_STATUS] = @p2, [KTR_NUMER] = @p3, [KTR_SKROT] = @p4, [KTR_NAZWA] = @p5, [KTR_KOD_POCZTOWY] = @p6, [KTR_MIEJSCOWOSC] = @p7, [KTR_ULICA] = @p8, [KTR_NUMER_DOMU] = @p9, [KTR_PRZEWOZNIK] = @p10 WHERE (([KTR_ID] = @p11))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_STATUS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_SKROT", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_KOD_POCZTOWY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_MIEJSCOWOSC", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ULICA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_NUMER_DOMU", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_PRZEWOZNIK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "KTR_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [KTR_ID], [KTR_STATUS], [KTR_NUMER], [KTR_SKROT], [KTR_NAZWA], [KTR_KOD_PO" +
                "CZTOWY], [KTR_MIEJSCOWOSC], [KTR_ULICA], [KTR_NUMER_DOMU], [KTR_PRZEWOZNIK] FROM" +
                " [KONTRAHENCI]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT [KTR_ID], [KTR_STATUS], [KTR_NUMER], [KTR_SKROT], [KTR_NAZWA], [KTR_KOD_PO" +
                "CZTOWY], [KTR_MIEJSCOWOSC], [KTR_ULICA], [KTR_NUMER_DOMU], [KTR_PRZEWOZNIK] FROM" +
                " [KONTRAHENCI]";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.KONTRAHENCIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.KONTRAHENCIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.KONTRAHENCIDataTable dataTable = new MOBIL_FILIADataSet.KONTRAHENCIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MOBIL_FILIADataSet.KONTRAHENCIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.KONTRAHENCIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "KONTRAHENCI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, int p3, string p4, string p5, string p6, string p7, string p8, string p9, string p10) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(p3));
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(p10));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, int p3, string p4, string p5, string p6, string p7, string p8, string p9, string p10, long p11) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(p3));
            if ((p4 == null)) {
                throw new global::System.ArgumentNullException("p4");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(p10));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(p11));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, int p3, string p4, string p5, string p6, string p7, string p8, string p9, string p10, long p11) {
            return this.Update(p11, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class LICZNIKITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LICZNIKITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LICZNIKI";
            tableMapping.ColumnMappings.Add("LCZ_TABELA", "LCZ_TABELA");
            tableMapping.ColumnMappings.Add("LCZ_NUMER", "LCZ_NUMER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LICZNIKI] WHERE (([LCZ_TABELA] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_TABELA", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LICZNIKI] ([LCZ_TABELA], [LCZ_NUMER]) VALUES (@p1, @p2)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_TABELA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [LICZNIKI] SET [LCZ_TABELA] = @p1, [LCZ_NUMER] = @p2 WHERE (([LCZ_TABELA] " +
                "= @p3))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_TABELA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "LCZ_TABELA", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [LCZ_TABELA], [LCZ_NUMER] FROM [LICZNIKI]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.LICZNIKIDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.LICZNIKIDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.LICZNIKIDataTable dataTable = new MOBIL_FILIADataSet.LICZNIKIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.LICZNIKIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "LICZNIKI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string p1) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(p1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string p1, long p2) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(p1));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p1, long p2, string p3) {
            if ((p1 == null)) {
                throw new global::System.ArgumentNullException("p1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(p1));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(p2));
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p2, string p3) {
            return this.Update(p3, p2, p3);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class OPAKOWANIATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public OPAKOWANIATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OPAKOWANIA";
            tableMapping.ColumnMappings.Add("OPK_ID", "OPK_ID");
            tableMapping.ColumnMappings.Add("OPK_SYMBOL", "OPK_SYMBOL");
            tableMapping.ColumnMappings.Add("OPK_TARA", "OPK_TARA");
            tableMapping.ColumnMappings.Add("OPK_NAZWA", "OPK_NAZWA");
            tableMapping.ColumnMappings.Add("OPK_AKTYWNY", "OPK_AKTYWNY");
            tableMapping.ColumnMappings.Add("OPK_TWR_ID", "OPK_TWR_ID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [OPAKOWANIA] WHERE (([OPK_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [OPAKOWANIA] ([OPK_ID], [OPK_SYMBOL], [OPK_TARA], [OPK_NAZWA], [OPK_A" +
                "KTYWNY], [OPK_TWR_ID]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_SYMBOL", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_TARA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_AKTYWNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [OPAKOWANIA] SET [OPK_ID] = @p1, [OPK_SYMBOL] = @p2, [OPK_TARA] = @p3, [OP" +
                "K_NAZWA] = @p4, [OPK_AKTYWNY] = @p5, [OPK_TWR_ID] = @p6 WHERE (([OPK_ID] = @p7))" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_SYMBOL", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_TARA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_AKTYWNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "OPK_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [OPK_ID], [OPK_SYMBOL], [OPK_TARA], [OPK_NAZWA], [OPK_AKTYWNY], [OPK_TWR_I" +
                "D] FROM [OPAKOWANIA]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.OPAKOWANIADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.OPAKOWANIADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.OPAKOWANIADataTable dataTable = new MOBIL_FILIADataSet.OPAKOWANIADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.OPAKOWANIADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "OPAKOWANIA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, global::System.Nullable<decimal> p3, string p4, string p5, global::System.Nullable<long> p6) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, global::System.Nullable<decimal> p3, string p4, string p5, global::System.Nullable<long> p6, long p7) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(p7));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, global::System.Nullable<decimal> p3, string p4, string p5, global::System.Nullable<long> p6, long p7) {
            return this.Update(p7, p2, p3, p4, p5, p6, p7);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class TOWARYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TOWARYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TOWARY";
            tableMapping.ColumnMappings.Add("TWR_ID", "TWR_ID");
            tableMapping.ColumnMappings.Add("TWR_STATUS", "TWR_STATUS");
            tableMapping.ColumnMappings.Add("TWR_NUMER", "TWR_NUMER");
            tableMapping.ColumnMappings.Add("TWR_SKROT", "TWR_SKROT");
            tableMapping.ColumnMappings.Add("TWR_NAZWA", "TWR_NAZWA");
            tableMapping.ColumnMappings.Add("TWR_KG", "TWR_KG");
            tableMapping.ColumnMappings.Add("TWR_SLJM_KOD", "TWR_SLJM_KOD");
            tableMapping.ColumnMappings.Add("TWR_CZY_ROZCHOD", "TWR_CZY_ROZCHOD");
            tableMapping.ColumnMappings.Add("TWR_CZY_PRZYCHOD", "TWR_CZY_PRZYCHOD");
            tableMapping.ColumnMappings.Add("TWR_STAN", "TWR_STAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TOWARY] WHERE (([TWR_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TOWARY] ([TWR_ID], [TWR_STATUS], [TWR_NUMER], [TWR_SKROT], [TWR_NAZW" +
                "A], [TWR_KG], [TWR_SLJM_KOD], [TWR_CZY_ROZCHOD], [TWR_CZY_PRZYCHOD], [TWR_STAN])" +
                " VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_STATUS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_SKROT", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_KG", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_SLJM_KOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_CZY_ROZCHOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_CZY_PRZYCHOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_STAN", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TOWARY] SET [TWR_ID] = @p1, [TWR_STATUS] = @p2, [TWR_NUMER] = @p3, [TWR_S" +
                "KROT] = @p4, [TWR_NAZWA] = @p5, [TWR_KG] = @p6, [TWR_SLJM_KOD] = @p7, [TWR_CZY_R" +
                "OZCHOD] = @p8, [TWR_CZY_PRZYCHOD] = @p9, [TWR_STAN] = @p10 WHERE (([TWR_ID] = @p" +
                "11))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_STATUS", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_NUMER", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_SKROT", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_KG", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_SLJM_KOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_CZY_ROZCHOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_CZY_PRZYCHOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_STAN", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p11", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [TWR_ID], [TWR_STATUS], [TWR_NUMER], [TWR_SKROT], [TWR_NAZWA], [TWR_KG], [" +
                "TWR_SLJM_KOD], [TWR_CZY_ROZCHOD], [TWR_CZY_PRZYCHOD], [TWR_STAN] FROM [TOWARY]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.TOWARYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.TOWARYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.TOWARYDataTable dataTable = new MOBIL_FILIADataSet.TOWARYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.TOWARYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "TOWARY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, int p3, string p4, string p5, global::System.Nullable<decimal> p6, string p7, string p8, string p9, global::System.Nullable<decimal> p10) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(p3));
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7 == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                throw new global::System.ArgumentNullException("p8");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                throw new global::System.ArgumentNullException("p9");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(p10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, int p3, string p4, string p5, global::System.Nullable<decimal> p6, string p7, string p8, string p9, global::System.Nullable<decimal> p10, long p11) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(p3));
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((p7 == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            if ((p8 == null)) {
                throw new global::System.ArgumentNullException("p8");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(p8));
            }
            if ((p9 == null)) {
                throw new global::System.ArgumentNullException("p9");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            if ((p10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(p10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(p11));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, int p3, string p4, string p5, global::System.Nullable<decimal> p6, string p7, string p8, string p9, global::System.Nullable<decimal> p10, long p11) {
            return this.Update(p11, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class TRANSFER_DO_WYSLANIATableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TRANSFER_DO_WYSLANIATableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRANSFER_DO_WYSLANIA";
            tableMapping.ColumnMappings.Add("TRDW_ID", "TRDW_ID");
            tableMapping.ColumnMappings.Add("TRDW_TABELA", "TRDW_TABELA");
            tableMapping.ColumnMappings.Add("TRDW_TABELA_ID", "TRDW_TABELA_ID");
            tableMapping.ColumnMappings.Add("TRDW_KIEDY", "TRDW_KIEDY");
            tableMapping.ColumnMappings.Add("TRDW_KTO", "TRDW_KTO");
            tableMapping.ColumnMappings.Add("TRDW_GDZIE", "TRDW_GDZIE");
            tableMapping.ColumnMappings.Add("TRDW_WYSLANO", "TRDW_WYSLANO");
            tableMapping.ColumnMappings.Add("TRDW_WYSLANO_KIEDY", "TRDW_WYSLANO_KIEDY");
            tableMapping.ColumnMappings.Add("TRDW_PLIK", "TRDW_PLIK");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TRANSFER_DO_WYSLANIA] WHERE (([TRDW_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TRANSFER_DO_WYSLANIA] ([TRDW_ID], [TRDW_TABELA], [TRDW_TABELA_ID], [" +
                "TRDW_KIEDY], [TRDW_KTO], [TRDW_GDZIE], [TRDW_WYSLANO], [TRDW_WYSLANO_KIEDY], [TR" +
                "DW_PLIK]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_TABELA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_TABELA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_WYSLANO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_WYSLANO_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_PLIK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TRANSFER_DO_WYSLANIA] SET [TRDW_ID] = @p1, [TRDW_TABELA] = @p2, [TRDW_TAB" +
                "ELA_ID] = @p3, [TRDW_KIEDY] = @p4, [TRDW_KTO] = @p5, [TRDW_GDZIE] = @p6, [TRDW_W" +
                "YSLANO] = @p7, [TRDW_WYSLANO_KIEDY] = @p8, [TRDW_PLIK] = @p9 WHERE (([TRDW_ID] =" +
                " @p10))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_TABELA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_TABELA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_KTO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_GDZIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_WYSLANO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_WYSLANO_KIEDY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p9", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_PLIK", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p10", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TRDW_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [TRDW_ID], [TRDW_TABELA], [TRDW_TABELA_ID], [TRDW_KIEDY], [TRDW_KTO], [TRD" +
                "W_GDZIE], [TRDW_WYSLANO], [TRDW_WYSLANO_KIEDY], [TRDW_PLIK] FROM [TRANSFER_DO_WY" +
                "SLANIA]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.TRANSFER_DO_WYSLANIADataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.TRANSFER_DO_WYSLANIADataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.TRANSFER_DO_WYSLANIADataTable dataTable = new MOBIL_FILIADataSet.TRANSFER_DO_WYSLANIADataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.TRANSFER_DO_WYSLANIADataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "TRANSFER_DO_WYSLANIA");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, long p3, System.DateTime p4, long p5, long p6, string p7, System.DateTime p8, string p9) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((long)(p3));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(p4));
            this.Adapter.InsertCommand.Parameters[4].Value = ((long)(p5));
            this.Adapter.InsertCommand.Parameters[5].Value = ((long)(p6));
            if ((p7 == null)) {
                throw new global::System.ArgumentNullException("p7");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(p7));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(p8));
            if ((p9 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(p9));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, long p3, System.DateTime p4, long p5, long p6, string p7, System.DateTime p8, string p9, long p10) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(p3));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(p4));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(p5));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(p6));
            if ((p7 == null)) {
                throw new global::System.ArgumentNullException("p7");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(p7));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(p8));
            if ((p9 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(p9));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(p10));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, long p3, System.DateTime p4, long p5, long p6, string p7, System.DateTime p8, string p9, long p10) {
            return this.Update(p10, p2, p3, p4, p5, p6, p7, p8, p9, p10);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class TWR_MAGAZYNYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TWR_MAGAZYNYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TWR_MAGAZYNY";
            tableMapping.ColumnMappings.Add("TWRMG_MG_ID", "TWRMG_MG_ID");
            tableMapping.ColumnMappings.Add("TWRMG_TWR_ID", "TWRMG_TWR_ID");
            tableMapping.ColumnMappings.Add("TWR_FLA_ID", "TWR_FLA_ID");
            tableMapping.ColumnMappings.Add("MG_KOD", "MG_KOD");
            tableMapping.ColumnMappings.Add("MG_NAZWA", "MG_NAZWA");
            tableMapping.ColumnMappings.Add("FLA_ID_DO", "FLA_ID_DO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [TWR_MAGAZYNY] WHERE (([TWRMG_MG_ID] = @p1) AND ([TWRMG_TWR_ID] = @p2" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_MG_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_TWR_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TWR_MAGAZYNY] ([TWRMG_MG_ID], [TWRMG_TWR_ID], [TWR_FLA_ID], [MG_KOD]" +
                ", [MG_NAZWA], [FLA_ID_DO]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_MG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_FLA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "MG_KOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "MG_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_ID_DO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TWR_MAGAZYNY] SET [TWRMG_MG_ID] = @p1, [TWRMG_TWR_ID] = @p2, [TWR_FLA_ID]" +
                " = @p3, [MG_KOD] = @p4, [MG_NAZWA] = @p5, [FLA_ID_DO] = @p6 WHERE (([TWRMG_MG_ID" +
                "] = @p7) AND ([TWRMG_TWR_ID] = @p8))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_MG_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_TWR_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWR_FLA_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "MG_KOD", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "MG_NAZWA", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "FLA_ID_DO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_MG_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p8", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "TWRMG_TWR_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [TWRMG_MG_ID], [TWRMG_TWR_ID], [TWR_FLA_ID], [MG_KOD], [MG_NAZWA], [FLA_ID" +
                "_DO] FROM [TWR_MAGAZYNY]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.TWR_MAGAZYNYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.TWR_MAGAZYNYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.TWR_MAGAZYNYDataTable dataTable = new MOBIL_FILIADataSet.TWR_MAGAZYNYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.TWR_MAGAZYNYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "TWR_MAGAZYNY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1, long p2) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(p2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, long p2, global::System.Nullable<long> p3, string p4, string p5, global::System.Nullable<long> p6) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.InsertCommand.Parameters[1].Value = ((long)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((long)(p6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, long p2, global::System.Nullable<long> p3, string p4, string p5, global::System.Nullable<long> p6, long p7, long p8) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((long)(p2));
            if ((p3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(p3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(p6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(p7));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((long)(p8));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<long> p3, string p4, string p5, global::System.Nullable<long> p6, long p7, long p8) {
            return this.Update(p7, p8, p3, p4, p5, p6, p7, p8);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    public partial class UZYTKOWNICYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlServerCe.SqlCeDataAdapter _adapter;
        
        private global::System.Data.SqlServerCe.SqlCeConnection _connection;
        
        private global::System.Data.SqlServerCe.SqlCeCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UZYTKOWNICYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlServerCe.SqlCeDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlServerCe.SqlCeConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlServerCe.SqlCeCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlServerCe.SqlCeCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlServerCe.SqlCeDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UZYTKOWNICY";
            tableMapping.ColumnMappings.Add("UZY_ID", "UZY_ID");
            tableMapping.ColumnMappings.Add("UZY_AKTYWNY", "UZY_AKTYWNY");
            tableMapping.ColumnMappings.Add("UZY_IDENTYFIKATOR", "UZY_IDENTYFIKATOR");
            tableMapping.ColumnMappings.Add("UZY_HASLO", "UZY_HASLO");
            tableMapping.ColumnMappings.Add("UZY_NAZWISKO", "UZY_NAZWISKO");
            tableMapping.ColumnMappings.Add("UZY_IMIE", "UZY_IMIE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [UZYTKOWNICY] WHERE (([UZY_ID] = @p1))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_ID", global::System.Data.DataRowVersion.Original, null));
            this._adapter.InsertCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [UZYTKOWNICY] ([UZY_ID], [UZY_AKTYWNY], [UZY_IDENTYFIKATOR], [UZY_HAS" +
                "LO], [UZY_NAZWISKO], [UZY_IMIE]) VALUES (@p1, @p2, @p3, @p4, @p5, @p6)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_AKTYWNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_IDENTYFIKATOR", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_HASLO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_NAZWISKO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_IMIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [UZYTKOWNICY] SET [UZY_ID] = @p1, [UZY_AKTYWNY] = @p2, [UZY_IDENTYFIKATOR]" +
                " = @p3, [UZY_HASLO] = @p4, [UZY_NAZWISKO] = @p5, [UZY_IMIE] = @p6 WHERE (([UZY_I" +
                "D] = @p7))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p1", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_ID", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p2", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_AKTYWNY", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_IDENTYFIKATOR", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p4", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_HASLO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p5", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_NAZWISKO", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p6", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_IMIE", global::System.Data.DataRowVersion.Current, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlServerCe.SqlCeParameter("@p7", global::System.Data.SqlDbType.BigInt, 0, global::System.Data.ParameterDirection.Input, true, 0, 0, "UZY_ID", global::System.Data.DataRowVersion.Original, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlServerCe.SqlCeConnection();
            this._connection.ConnectionString = ("Data Source =" 
                        + (System.IO.Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().GetName().CodeBase) + "\\MOBIL_FILIA.sdf;"));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlServerCe.SqlCeCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlServerCe.SqlCeCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT [UZY_ID], [UZY_AKTYWNY], [UZY_IDENTYFIKATOR], [UZY_HASLO], [UZY_NAZWISKO]," +
                " [UZY_IMIE] FROM [UZYTKOWNICY]";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MOBIL_FILIADataSet.UZYTKOWNICYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MOBIL_FILIADataSet.UZYTKOWNICYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MOBIL_FILIADataSet.UZYTKOWNICYDataTable dataTable = new MOBIL_FILIADataSet.UZYTKOWNICYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet.UZYTKOWNICYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(MOBIL_FILIADataSet dataSet) {
            return this.Adapter.Update(dataSet, "UZYTKOWNICY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long p1) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(p1));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long p1, string p2, string p3, string p4, string p5, string p6) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                throw new global::System.ArgumentNullException("p5");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(p6));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long p1, string p2, string p3, string p4, string p5, string p6, long p7) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(p1));
            if ((p2 == null)) {
                throw new global::System.ArgumentNullException("p2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(p2));
            }
            if ((p3 == null)) {
                throw new global::System.ArgumentNullException("p3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(p3));
            }
            if ((p4 == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(p4));
            }
            if ((p5 == null)) {
                throw new global::System.ArgumentNullException("p5");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(p5));
            }
            if ((p6 == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(p6));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((long)(p7));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string p2, string p3, string p4, string p5, string p6, long p7) {
            return this.Update(p7, p2, p3, p4, p5, p6, p7);
        }
    }
}
namespace MOBIL_FILIADataSetUtil {
    using System;
    using System.Data;
    
    
    public partial class DesignerUtil {
        
        public static bool IsDesignTime() {
            // Determine if this instance is running against .NET Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("B77A5C561934E089")) {
                    return true;
                }
            }
            return false;
        }
        
        public static bool IsRunTime() {
            // Determine if this instance is running against .NET Compact Framework by using the MSCoreLib PublicKeyToken
            System.Reflection.Assembly mscorlibAssembly = typeof(int).Assembly;
            if ((mscorlibAssembly != null)) {
                if (mscorlibAssembly.FullName.ToUpper().EndsWith("969DB8053D3322AC")) {
                    return true;
                }
            }
            return false;
        }
    }
}
